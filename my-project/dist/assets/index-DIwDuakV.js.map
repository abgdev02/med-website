{"version":3,"mappings":"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","names":["Navigation","activeSection","setActiveSection","useState","useEffect","handleScroll","sections","scrollPosition","threshold","newActiveSection","section","element","rect","elementTop","elementBottom","ticking","throttledHandleScroll","isActive","jsxs","Fragment","jsx","styles","Footer","email","setEmail","isSubscribed","setIsSubscribed","handleEmailSubmit","e","WaterShaderBackground","meshRef","useRef","waterShader","useMemo","THREE.Vector2","material","THREE.ShaderMaterial","THREE.DoubleSide","useFrame","time","breathCycle","breathPhase","breathInfluence","FloatingParticles","mouse","pointsRef","particleCount","initialPositions","particlesGeometry","geometry","THREE.BufferGeometry","posArray","i","THREE.BufferAttribute","particlesMaterial","THREE.PointsMaterial","state","positions","breathIntensity","baseWindSpeed","turbulenceStrength","gustPeriod","boundarySize","index","x","y","z","noiseScale","windForceX","windForceY","windForceZ","gustPhase","gustIntensity","breathInfluenceY","breathInfluenceX","rotation","distance","rotationStrength","windRotationX","windRotationZ","totalWindX","totalWindY","totalWindZ","BreathingGuide","intensity","breathingRingRef","ripplesRef","setBreathPhase","particleData","data","waveIndex","indexInWave","goldenAngle","angle","baseRadius","radiusVariation","radius","ringGeometry","sizes","ringMaterial","canvas","context","gradient","texture","THREE.CanvasTexture","THREE.Color","THREE.NormalBlending","currentTime","scale","opacity","currentPhase","breathProgress","holdTime","i3","initX","initY","initZ","waveDelay","waveTime","radialPulse","organicX","organicY","organicZ","breathScale","baseSize","sizePulse","child","ripple","age","THREE.Material","useMouseTracking","handleMouseMove","event","ThreeDErrorBoundary","Component","props","error","_error","errorInfo","_a","RotatingPebble","children","speed","groupRef","_","delta","HeroSection","isMobile","Canvas","Suspense","Float","ProceduralPebble","lazy","__vitePreload","module","TabSection","HoldMeditateSection","ComponentLoadingFallback","ParticleBackground","containerRef","container","particles","particle","useScreenSize","setIsMobile","isTablet","setIsTablet","checkScreenSize","width","runAccessibilityAudit","rootElement","root","issues","runCheck","name","checkFn","results","checkColorContrast","checkKeyboardNavigation","checkAriaLabels","checkHeadingStructure","checkFocusManagement","checkImageAltText","checkFormLabels","checkMotionPreferences","checkSemanticStructure","checkSkipLinks","critical","serious","moderate","minor","failed","warnings","total","passed","baseScore","penaltyCritical","penaltySerious","penaltyModerate","penaltyMinor","score","compliance","fontSize","textColor","backgroundColor","getEffectiveBackgroundColor","contrast","calculateContrastRatio","requiredRatio","tabIndex","isNativelyFocusable","button","hasText","hasAriaLabel","hasAriaLabelledBy","hasTitle","containsOnlyIcon","impact","img","height","alt","ariaLabel","role","isInAccessibleContainer","_b","control","id","ariaLabelledBy","title","placeholder","hasLabel","isWrappedInLabel","headings","h1Count","h","previousLevel","heading","level","modal","src","field","ariaRequired","_c","sheet","rule","div","current","foundBackgroundColor","color1","color2","rgb1","parseColor","rgb2","l1","getRelativeLuminance","l2","lighter","darker","color","match","hex","char","r","g","b","namedColors","lowerColor","sRGB","c","logAccessibilityReport","report","issue","_index","icon","useAccessibilityAudit","options","enabled","autoRun","logToConsole","debounceMs","rootSelector","setReport","isRunning","setIsRunning","lastRun","setLastRun","debounceRef","lastDOMChangeRef","runAudit","auditReport","clearReport","debouncedAudit","observer","mutations","mutation","useAccessibilityMonitor","isWidgetVisible","setIsWidgetVisible","handleWidgetToggle","customEvent","prev","widget","isMinimized","displayReport","criticalCount","seriousCount","auditButton","newAuditButton","minimizeButton","newMinimizeButton","closeButton","newCloseButton","existingWidget","useKeyboardNavigationTracker","tabSequence","isTracking","handleKeyDown","activeElement","elementInfo","hasVisibleText","handleFocusIn","useScreenReaderSimulator","liveRegions","observers","region","politeness","text","handleFocusChange","announcement","labelElement","tabContent","App","registerServiceWorker","registration","newWorker","ReactDOM","React"],"ignoreList":[],"sources":["../../src/components/layout/Navigation.tsx","../../src/components/layout/Footer.tsx","../../src/components/three-d/WaterShaderBackground.tsx","../../src/components/three-d/FloatingParticles.tsx","../../src/components/three-d/BreathingGuide.tsx","../../src/hooks/useMouseTracking.ts","../../src/components/ui/ThreeDErrorBoundary.tsx","../../src/components/sections/HeroSection.tsx","../../src/components/LazyComponents.tsx","../../src/components/ui/ParticleBackground.tsx","../../src/hooks/useScreenSize.ts","../../src/utils/AccessibilityAuditor.ts","../../src/hooks/useAccessibilityAudit.ts","../../src/data/tabContent.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport styles from './Navigation.module.css'\r\n\r\nexport function Navigation() {\r\n  const [activeSection, setActiveSection] = useState('home')\r\n  \r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const sections = ['home', 'about', 'how-it-works']\r\n      const scrollPosition = window.scrollY\r\n      const windowHeight = window.innerHeight\r\n      const threshold = windowHeight * 0.5 // 50% of viewport height as threshold\r\n      \r\n      let newActiveSection = 'home' // Default to home\r\n      \r\n      // Check each section to find which one is most prominently visible\r\n      for (const section of sections) {\r\n        const element = document.getElementById(section)\r\n        if (element) {\r\n          const rect = element.getBoundingClientRect()\r\n          const elementTop = scrollPosition + rect.top\r\n          const elementBottom = elementTop + rect.height\r\n          \r\n          // If the section's top is above the threshold line (middle of screen)\r\n          // and the section's bottom is below the threshold line\r\n          if (elementTop <= scrollPosition + threshold && \r\n              elementBottom > scrollPosition + threshold) {\r\n            newActiveSection = section\r\n            break\r\n          }\r\n          \r\n          // Special case for home section when at very top\r\n          if (section === 'home' && scrollPosition < threshold) {\r\n            newActiveSection = 'home'\r\n            break\r\n          }\r\n        }\r\n      }\r\n      \r\n      if (newActiveSection !== activeSection) {\r\n        setActiveSection(newActiveSection)\r\n      }\r\n    }\r\n\r\n    // Set initial active section and call handleScroll immediately\r\n    handleScroll()\r\n\r\n    // Use throttling for better performance\r\n    let ticking = false\r\n    const throttledHandleScroll = () => {\r\n      if (!ticking) {\r\n        requestAnimationFrame(() => {\r\n          handleScroll()\r\n          ticking = false\r\n        })\r\n        ticking = true\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', throttledHandleScroll, { passive: true })\r\n    return () => window.removeEventListener('scroll', throttledHandleScroll)\r\n  }, [activeSection])\r\n\r\n  const isActive = (section: string) => activeSection === section\r\n\r\n  return (\r\n    <>\r\n      {/* Skip to main content for accessibility */}\r\n      <a href=\"#main-content\" className={styles.skipToMain}>\r\n        Skip to main content\r\n      </a>\r\n      \r\n      <nav className={styles.nav} role=\"navigation\" aria-label=\"Main navigation\">\r\n        <a href=\"#home\" className={styles.logo} aria-label=\"iembraceland home\">\r\n          iembraceland\r\n        </a>        <ul className={styles.links} role=\"list\">\r\n          <li>\r\n            <a \r\n              href=\"#home\" \r\n              className={`${styles.navLink} ${isActive('home') ? styles.active : ''}`}\r\n              aria-current={isActive('home') ? 'page' : undefined}\r\n            >\r\n              Home\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a \r\n              href=\"#about\" \r\n              className={`${styles.navLink} ${isActive('about') ? styles.active : ''}`}\r\n              aria-current={isActive('about') ? 'page' : undefined}\r\n            >\r\n              About\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a \r\n              href=\"#how-it-works\" \r\n              className={`${styles.navLink} ${isActive('how-it-works') ? styles.active : ''}`}\r\n              aria-current={isActive('how-it-works') ? 'page' : undefined}\r\n            >\r\n              How it works\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport styles from './Footer.module.css'\r\n\r\nexport const Footer = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [isSubscribed, setIsSubscribed] = useState(false)\r\n\r\n  const handleEmailSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (email.trim()) {\r\n      // Simulate email subscription\r\n      setIsSubscribed(true)\r\n      setEmail('')\r\n      setTimeout(() => setIsSubscribed(false), 3000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <footer className={styles.footer} role=\"contentinfo\">\r\n      <div className={styles.container}>\r\n        {/* Main Footer Content */}\r\n        <div className={styles.footerMain}>\r\n          {/* Logo Section */}\r\n          <div className={styles.logoSection}>\r\n            <div className={styles.logo}>\r\n              <span className={styles.logoText}>ROOT</span>\r\n            </div>\r\n            <p className={styles.tagline}>\r\n              Find your center through mindful meditation\r\n            </p>\r\n          </div>\r\n\r\n          {/* Join the Community Section */}\r\n          <div className={styles.section}>\r\n            <h3 className={styles.sectionTitle}>Join the Community</h3>\r\n            <ul className={styles.linkList}>\r\n              <li><a href=\"#discord\" className={styles.link}>Discord Server</a></li>\r\n              <li><a href=\"#reddit\" className={styles.link}>Reddit Community</a></li>\r\n              <li><a href=\"#facebook\" className={styles.link}>Facebook Group</a></li>\r\n              <li><a href=\"#instagram\" className={styles.link}>Instagram</a></li>\r\n              <li><a href=\"#youtube\" className={styles.link}>YouTube Channel</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Contact Section */}\r\n          <div className={styles.section}>\r\n            <h3 className={styles.sectionTitle}>Contact</h3>\r\n            <ul className={styles.linkList}>\r\n              <li><a href=\"mailto:hello@root-meditate.com\" className={styles.link}>hello@root-meditate.com</a></li>\r\n              <li><a href=\"#support\" className={styles.link}>Support Center</a></li>\r\n              <li><a href=\"#feedback\" className={styles.link}>Send Feedback</a></li>\r\n              <li><a href=\"#press\" className={styles.link}>Press Inquiries</a></li>\r\n              <li><a href=\"#partnerships\" className={styles.link}>Partnerships</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Learn Section */}\r\n          <div className={styles.section}>\r\n            <h3 className={styles.sectionTitle}>Learn</h3>\r\n            <ul className={styles.linkList}>\r\n              <li><a href=\"#guides\" className={styles.link}>Meditation Guides</a></li>\r\n              <li><a href=\"#blog\" className={styles.link}>Blog</a></li>\r\n              <li><a href=\"#tutorials\" className={styles.link}>Video Tutorials</a></li>\r\n              <li><a href=\"#research\" className={styles.link}>Research</a></li>\r\n              <li><a href=\"#faq\" className={styles.link}>FAQ</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Email Signup Section */}\r\n          <div className={styles.section}>\r\n            <h3 className={styles.sectionTitle}>Stay Updated</h3>\r\n            <p className={styles.signupDescription}>\r\n              Get meditation tips and updates delivered to your inbox\r\n            </p>\r\n            <form onSubmit={handleEmailSubmit} className={styles.emailForm}>\r\n              <div className={styles.emailInputWrapper}>\r\n                <input\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"Enter your email\"\r\n                  className={styles.emailInput}\r\n                  required\r\n                  aria-label=\"Email address for newsletter signup\"\r\n                />\r\n                <button \r\n                  type=\"submit\" \r\n                  className={styles.submitButton}\r\n                  aria-label=\"Subscribe to newsletter\"\r\n                >\r\n                  Subscribe\r\n                </button>\r\n              </div>\r\n              {isSubscribed && (\r\n                <p className={styles.successMessage} role=\"status\">\r\n                  ✨ Thanks for subscribing! Check your email for confirmation.\r\n                </p>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Footer Bottom */}\r\n        <div className={styles.footerBottom}>\r\n          <div className={styles.bottomLeft}>\r\n            <p className={styles.copyright}>\r\n              © 2024 ROOT Meditation. All rights reserved.\r\n            </p>\r\n          </div>\r\n          <div className={styles.bottomRight}>\r\n            <nav className={styles.legalNav} aria-label=\"Legal navigation\">\r\n              <a href=\"#privacy\" className={styles.legalLink}>Privacy Policy</a>\r\n              <a href=\"#terms\" className={styles.legalLink}>Terms of Service</a>\r\n              <a href=\"#cookies\" className={styles.legalLink}>Cookie Policy</a>\r\n              <a href=\"#accessibility\" className={styles.legalLink}>Accessibility</a>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","import { useRef, useMemo } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport * as THREE from 'three'\r\n\r\nexport function WaterShaderBackground() {\r\n  const meshRef = useRef<THREE.Mesh>(null!)\r\n    // Enhanced water shader with breathing synchronization\r\n  const waterShader = useMemo(() => ({\r\n    uniforms: {\r\n      tex: { value: null },\r\n      time: { value: 0.0 },\r\n      factor: { value: 2.0 }, // Increased factor for stronger effects\r\n      breathPhase: { value: 0.0 }, // New breathing uniform\r\n      resolution: { value: new THREE.Vector2(window.innerWidth, window.innerHeight) }\r\n    },\r\n    \r\n    vertexShader: `\r\n      varying vec2 vUv;\r\n      void main(){  \r\n        vUv = uv; \r\n        vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\r\n        gl_Position = projectionMatrix * modelViewPosition;\r\n      }\r\n    `,\r\n      fragmentShader: `\r\n      uniform float time;\r\n      uniform float factor;\r\n      uniform float breathPhase;\r\n      uniform vec2 resolution;\r\n      uniform sampler2D tex;\r\n      \r\n      varying vec2 vUv;\r\n      \r\n      void main() {  \r\n        vec2 uv1 = vUv;\r\n        vec2 uv = gl_FragCoord.xy/resolution.xy;        float frequency = 8.0; // Increased frequency for more waves\r\n        float amplitude = 0.025 * factor; // Increased amplitude for stronger distortion\r\n        float x = uv1.y * frequency + time * .7; \r\n        float y = uv1.x * frequency + time * .3;        uv1.x += cos(x+y) * amplitude * cos(y);\r\n        uv1.y += sin(x-y) * amplitude * cos(y);          // Apple-inspired ultra-light color palette with 95% white space\r\n        vec3 color1 = vec3(0.99, 0.99, 0.99); // Almost pure white\r\n        vec3 color2 = vec3(0.98, 0.97, 0.99); // Barely perceptible lavender\r\n        vec3 color3 = vec3(0.96, 0.95, 0.98); // Ultra-light purple tint\r\n        vec3 color4 = vec3(0.94, 0.93, 0.97); // Subtle purple accent          // Create subtle gradient with minimal depth\r\n        vec3 color = mix(color1, color2, uv1.y);\r\n        color = mix(color, color3, uv1.y * uv1.y * 0.3); // Reduced effect\r\n        color = mix(color, color4, smoothstep(0.8, 1.0, uv1.y)); // Minimal edge accent        // Minimal shimmer effects for Apple-inspired subtlety\r\n        float shimmer1 = sin(uv1.x * 60.0 + time * 2.5) * sin(uv1.y * 60.0 + time * 1.8) * 0.03;\r\n        float shimmer2 = sin(uv1.x * 40.0 + time * 1.5) * sin(uv1.y * 40.0 + time * 1.0) * 0.02;\r\n        float shimmer3 = sin(uv1.x * 80.0 + time * 3.0) * sin(uv1.y * 80.0 + time * 2.2) * 0.015;\r\n        \r\n        // Ultra-subtle shimmer layers\r\n        color += shimmer1 * vec3(0.99, 0.98, 0.99) * 0.02; // Barely visible white shimmer\r\n        color += shimmer2 * vec3(0.98, 0.97, 0.99) * 0.015; // Subtle white shimmer\r\n        color += shimmer3 * vec3(0.97, 0.96, 0.98) * 0.01; // Minimal purple hint\r\n          // Subtle wave highlights with minimal intensity\r\n        float wave1 = sin(uv1.x * 25.0 + time * 1.2) * 0.008;\r\n        float wave2 = cos(uv1.y * 30.0 + time * 0.8) * 0.006;\r\n        float wave3 = sin((uv1.x + uv1.y) * 20.0 + time * 1.5) * 0.007;\r\n        \r\n        color += wave1 * vec3(0.995, 0.99, 0.995); // Barely visible white highlight\r\n        color += wave2 * vec3(0.99, 0.985, 0.99); // Subtle white wave\r\n        color += wave3 * vec3(0.985, 0.98, 0.985); // Minimal accent\r\n          gl_FragColor = vec4(color, 1.0);\r\n      }\r\n    `\r\n  }), [])\r\n  \r\n  const material = useMemo(() => new THREE.ShaderMaterial({\r\n    uniforms: waterShader.uniforms,\r\n    vertexShader: waterShader.vertexShader,\r\n    fragmentShader: waterShader.fragmentShader,\r\n    transparent: false,\r\n    side: THREE.DoubleSide // Ensure it's visible from both sides\r\n  }), [waterShader])\r\n  // Enhanced animation loop with breathing synchronization\r\n  useFrame(() => {\r\n    if (meshRef.current && material.uniforms) {\r\n      const time = material.uniforms.time.value + 0.08\r\n      material.uniforms.time.value = time\r\n      \r\n      // 4-7-8 breathing pattern synchronization\r\n      const breathCycle = 19 // Total cycle duration\r\n      const breathPhase = (time % breathCycle) / breathCycle\r\n      material.uniforms.breathPhase.value = breathPhase\r\n      \r\n      // Update resolution\r\n      material.uniforms.resolution.value.set(window.innerWidth, window.innerHeight)\r\n      \r\n      // Subtle background movement for depth with breathing influence\r\n      const breathInfluence = Math.sin(breathPhase * Math.PI * 2) * 0.1\r\n      meshRef.current.position.x = Math.sin(time * 0.1) * 0.5 + breathInfluence * 0.2\r\n      meshRef.current.position.y = Math.cos(time * 0.1) * 0.3 + breathInfluence * 0.15\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <mesh \r\n      ref={meshRef} \r\n      position={[0, 0, -5]} // Closer to camera for better visibility\r\n      scale={[60, 60, 1]} // Larger scale to ensure full coverage\r\n      material={material}\r\n      renderOrder={-1} // Render behind other objects\r\n    >\r\n      <planeGeometry args={[1, 1]} />\r\n    </mesh>\r\n  )\r\n}","import { useRef, useMemo } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport * as THREE from 'three'\r\n\r\ninterface FloatingParticlesProps {\r\n  mouse: THREE.Vector2\r\n}\r\n\r\nexport function FloatingParticles({ mouse }: FloatingParticlesProps) {\r\n  const pointsRef = useRef<THREE.Points>(null!)  // Reduced particle count for better performance and visibility\r\n  const particleCount = 16000\r\n  \r\n  // Store initial positions for wind reset boundaries\r\n  const initialPositions = useRef<Float32Array | null>(null)\r\n  \r\n  // Create particle geometry with wind simulation support\r\n  const particlesGeometry = useMemo(() => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const posArray = new Float32Array(particleCount * 3)\r\n      // Generate random positions within a larger boundary for wind drift\r\n    // Position particles behind the pebble (negative Z values)\r\n    for(let i = 0; i < particleCount * 3; i += 3) {\r\n      posArray[i] = (Math.random() - 0.5) * 8     // X position\r\n      posArray[i + 1] = (Math.random() - 0.5) * 24 // Y position  \r\n      posArray[i + 2] = (Math.random() - 0.5) * 12 - 6 // Z position: behind pebble (-12 to 0)\r\n    }\r\n    \r\n    // Store initial positions for boundary checking\r\n    initialPositions.current = new Float32Array(posArray)\r\n      geometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3))\r\n    return geometry\r\n  }, [])\r\n\r\n  // Particle material using default circular points\r\n  const particlesMaterial = useMemo(() => {\r\n    return new THREE.PointsMaterial({\r\n      size: 0.012, // Larger for better visibility\r\n      color: 0x6b21a8, // Dark purple color directly\r\n      transparent: true,\r\n      opacity: 0.8, // Much higher opacity      blending: THREE.NormalBlending, // Normal blending instead of additive\r\n      sizeAttenuation: true, // Makes particles smaller with distance\r\n      vertexColors: false, // Ensures consistent color\r\n    })\r\n  }, [])\r\n\r\n  // Realistic wind simulation with accurate mathematical models\r\n  useFrame((state) => {\r\n    if (!pointsRef.current) return\r\n    \r\n    const time = state.clock.getElapsedTime()\r\n    const positions = pointsRef.current.geometry.attributes.position.array as Float32Array\r\n    \r\n    // Breathing cycle synchronization\r\n    const breathCycle = 19 // 4-7-8 breathing pattern\r\n    const breathPhase = (time % breathCycle) / breathCycle\r\n    const breathIntensity = Math.sin(breathPhase * Math.PI * 2) * 0.3\r\n    \r\n    // Wind simulation parameters\r\n    const baseWindSpeed = 0.0008 // Very slow base movement\r\n    const turbulenceStrength = 0.12\r\n    const gustPeriod = 8.0 // Gust every 8 seconds\r\n    const boundarySize = 10 // Reset boundary\r\n    \r\n    // Update each particle position with wind forces\r\n    for (let i = 0; i < particleCount; i++) {\r\n      const index = i * 3\r\n      const x = positions[index]\r\n      const y = positions[index + 1]\r\n      const z = positions[index + 2]\r\n      \r\n      // Multi-octave noise for natural turbulence (Perlin-like)\r\n      const noiseScale = 0.1\r\n      const windForceX = \r\n        Math.sin(time * 0.3 + x * noiseScale) * 0.15 +\r\n        Math.sin(time * 0.7 + x * noiseScale * 2) * 0.08 +\r\n        Math.sin(time * 1.1 + x * noiseScale * 4) * 0.04\r\n      \r\n      const windForceY = \r\n        Math.cos(time * 0.2 + y * noiseScale * 0.8) * 0.1 +\r\n        Math.cos(time * 0.5 + y * noiseScale * 1.5) * 0.05 +\r\n        Math.sin(time * 0.9 + y * noiseScale * 3) * 0.03\r\n      \r\n      const windForceZ = \r\n        Math.sin(time * 0.25 + z * noiseScale * 1.2) * 0.12 +\r\n        Math.cos(time * 0.6 + z * noiseScale * 2.2) * 0.06 +\r\n        Math.sin(time * 0.8 + z * noiseScale * 3.5) * 0.03\r\n        // Periodic wind gusts with realistic intensity curves\r\n      const gustPhase = (time % gustPeriod) / gustPeriod\r\n      const gustIntensity = Math.pow(Math.sin(gustPhase * Math.PI), 2) * 0.8\r\n      \r\n      // Breath-synchronized movement\r\n      const breathInfluenceY = breathIntensity * 0.4 // Vertical breathing movement\r\n      const breathInfluenceX = Math.sin(breathPhase * Math.PI) * 0.2 // Gentle horizontal sway\r\n      \r\n      // Rotational wind components (vortices)\r\n      const rotation = time * 0.1\r\n      const distance = Math.sqrt(x * x + z * z)\r\n      const rotationStrength = Math.max(0, 1 - distance * 0.1) * gustIntensity\r\n      \r\n      const windRotationX = Math.cos(rotation) * rotationStrength * 0.3\r\n      const windRotationZ = Math.sin(rotation) * rotationStrength * 0.3\r\n      \r\n      // Combine all forces including breath synchronization\r\n      const totalWindX = (windForceX + windRotationX + breathInfluenceX) * turbulenceStrength + baseWindSpeed\r\n      const totalWindY = (windForceY + breathInfluenceY) * turbulenceStrength * 0.6\r\n      const totalWindZ = (windForceZ + windRotationZ) * turbulenceStrength\r\n      \r\n      // Apply wind forces to particle positions\r\n      positions[index] += totalWindX\r\n      positions[index + 1] += totalWindY\r\n      positions[index + 2] += totalWindZ\r\n        // Boundary wrapping for continuous flow\r\n      if (Math.abs(positions[index]) > boundarySize) {\r\n        positions[index] = positions[index] > 0 ? -boundarySize : boundarySize\r\n      }\r\n      if (Math.abs(positions[index + 1]) > boundarySize) {\r\n        positions[index + 1] = positions[index + 1] > 0 ? -boundarySize : boundarySize\r\n      }\r\n      // Different boundary for Z (particles stay behind pebble)\r\n      if (positions[index + 2] > 0) {\r\n        positions[index + 2] = -12 // Reset to back if too far forward\r\n      }\r\n      if (positions[index + 2] < -12) {\r\n        positions[index + 2] = 0 // Reset to front boundary if too far back\r\n      }\r\n    }\r\n    \r\n    // Mark positions as needing update\r\n    pointsRef.current.geometry.attributes.position.needsUpdate = true\r\n    \r\n    // Gentle overall rotation with mouse influence\r\n    pointsRef.current.rotation.y += 0.0005 // Slower rotation\r\n    pointsRef.current.rotation.x = mouse.y * 0.1 // Reduced mouse influence\r\n  })\r\n  return (\r\n    <points\r\n      ref={pointsRef}\r\n      geometry={particlesGeometry}\r\n      material={particlesMaterial}\r\n    />\r\n  )\r\n}","import { useRef, useState, useMemo } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport * as THREE from 'three'\r\n\r\ninterface BreathingGuideProps {\r\n  intensity?: number\r\n}\r\n\r\nexport function BreathingGuide({ intensity = 1 }: BreathingGuideProps) {\r\n  const breathingRingRef = useRef<THREE.Points>(null!)\r\n  const ripplesRef = useRef<THREE.Group>(null!)\r\n  const [breathPhase, setBreathPhase] = useState('inhale')\r\n  \r\n  // Store initial positions for animation\r\n  const particleData = useMemo(() => {\r\n    const count = 4000 // More particles for smoother effect\r\n    const data = {\r\n      initialPositions: new Float32Array(count * 3),\r\n      randomFactors: new Float32Array(count * 3), // For organic movement\r\n      phases: new Float32Array(count) // Phase offset for each particle\r\n    }\r\n      // Create particles in radial waves\r\n    for (let i = 0; i < count; i++) {\r\n      // Create multiple waves/layers\r\n      const waveIndex = i % 16 // 8 waves\r\n      const indexInWave = Math.floor(i / 8)\r\n      \r\n      // Spiral distribution\r\n      const goldenAngle = Math.PI * (3 - Math.sqrt(5)) // Golden angle\r\n      const angle = indexInWave * goldenAngle + (waveIndex * Math.PI / 4)\r\n      \r\n      // Varying radius for each wave\r\n      const baseRadius = 0.2 + (waveIndex * 0.16)\r\n      const radiusVariation = Math.random() * 0.3\r\n      const radius = baseRadius + radiusVariation\r\n      \r\n      // Store initial positions\r\n      data.initialPositions[i * 3] = Math.cos(angle) * radius\r\n      data.initialPositions[i * 3 + 1] = Math.sin(angle) * radius\r\n      data.initialPositions[i * 3 + 2] = (Math.random() - 0.5) * 0.1\r\n      \r\n      // Random factors for organic movement\r\n      data.randomFactors[i * 3] = Math.random() * 2 - 1\r\n      data.randomFactors[i * 3 + 1] = Math.random() * 2 - 1\r\n      data.randomFactors[i * 3 + 2] = Math.random() * 2 - 1\r\n      \r\n      // Phase offset for wave-like animation\r\n      data.phases[i] = (waveIndex / 8) * Math.PI * 2 + Math.random() * 0.5\r\n    }\r\n    \r\n    return data\r\n  }, [])\r\n  \r\n  // Create radial burst particle geometry\r\n  const ringGeometry = useMemo(() => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const particleCount = 4000\r\n    const positions = new Float32Array(particleCount * 3)\r\n    const sizes = new Float32Array(particleCount)\r\n    \r\n    // Initialize with stored positions\r\n    positions.set(particleData.initialPositions)\r\n    \r\n    // Set sizes based on distance from center\r\n    for (let i = 0; i < particleCount; i++) {\r\n      const distance = Math.sqrt(\r\n        particleData.initialPositions[i * 3] ** 2 + \r\n        particleData.initialPositions[i * 3 + 1] ** 2\r\n      )\r\n      \r\n      // Size based on distance - smaller particles further out\r\n      sizes[i] = 0.08 * (1 - distance / 3)\r\n    }\r\n    \r\n    geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3))\r\n    geometry.setAttribute('size', new THREE.BufferAttribute(sizes, 1))\r\n    \r\n    return geometry\r\n  }, [particleData])\r\n  \r\n  // Create particle material with proper blending\r\n  const ringMaterial = useMemo(() => {\r\n    // Create purple-tinted glow texture\r\n    const canvas = document.createElement('canvas')\r\n    canvas.width = 32\r\n    canvas.height = 32\r\n    const context = canvas.getContext('2d')!\r\n    \r\n    // Create purple gradient instead of white\r\n    const gradient = context.createRadialGradient(16, 16, 0, 16, 16, 16)\r\n    gradient.addColorStop(0, 'rgba(147, 51, 234, 1)')    // Bright purple center\r\n    gradient.addColorStop(0.3, 'rgba(124, 58, 237, 0.8)') // Mid purple\r\n    gradient.addColorStop(0.6, 'rgba(91, 33, 182, 0.4)')  // Darker purple\r\n    gradient.addColorStop(1, 'rgba(76, 29, 149, 0)')      // Fade to transparent\r\n    \r\n    context.fillStyle = gradient\r\n    context.fillRect(0, 0, 16, 16)\r\n    \r\n    const texture = new THREE.CanvasTexture(canvas)\r\n    \r\n    return new THREE.PointsMaterial({\r\n      size: 0.08,\r\n      color: new THREE.Color(0x8b5cf6), // Light purple base color\r\n      transparent: true,\r\n      opacity: 0.8,\r\n      sizeAttenuation: true,\r\n      blending: THREE.NormalBlending, // Changed from additive to normal\r\n      depthWrite: false,\r\n      map: texture\r\n    })\r\n  }, [])\r\n  \r\n  useFrame((state) => {\r\n    const time = state.clock.getElapsedTime()\r\n    \r\n    // 4-7-8 breathing pattern\r\n    const cycleTime = 19\r\n    const currentTime = time % cycleTime\r\n    \r\n    let scale = 1\r\n    let opacity = 0.4 * intensity\r\n    let currentPhase = 'inhale'\r\n    let breathProgress = 0\r\n    \r\n    // BREATHING PHASES\r\n    if (currentTime < 4) { \r\n      // Inhale phase\r\n      breathProgress = currentTime / 4\r\n      scale = 0.24 + (breathProgress * 1.16)  // was: 0.7 + (breathProgress * 0.7)\r\n      opacity = (0.15 + breathProgress * 0.65) * intensity  // was: (0.3 + breathProgress * 0.5)\r\n      currentPhase = 'inhale'\r\n    } else if (currentTime < 11) { \r\n      // Hold phase\r\n      breathProgress = 1\r\n      scale = 1.4\r\n      opacity = 0.8 * intensity\r\n      currentPhase = 'hold'\r\n      \r\n      const holdTime = (currentTime - 4) / 7\r\n      scale += Math.sin(holdTime * Math.PI * 6) * 0.02  // reduce to 0.02 from 0.03\r\n    } else { \r\n      // Exhale phase\r\n      breathProgress = 1 - ((currentTime - 11) / 8)\r\n      scale = 0.24 + (breathProgress * 1.16)  // was: 0.7 + (breathProgress * 0.7)\r\n      opacity = (0.15 + breathProgress * 0.65) * intensity  // was: (0.3 + breathProgress * 0.5)\r\n      currentPhase = 'exhale'\r\n    }\r\n    \r\n    if (breathPhase !== currentPhase) {\r\n      setBreathPhase(currentPhase)\r\n    }\r\n    \r\n    // Update breathing ring particles with ASMR-like animation\r\n    if (breathingRingRef.current) {\r\n      const positions = breathingRingRef.current.geometry.attributes.position\r\n      const sizes = breathingRingRef.current.geometry.attributes.size\r\n      \r\n      // Animate each particle\r\n      for (let i = 0; i < positions.count; i++) {\r\n        const i3 = i * 3\r\n        \r\n        // Get initial position\r\n        const initX = particleData.initialPositions[i3]\r\n        const initY = particleData.initialPositions[i3 + 1]\r\n        const initZ = particleData.initialPositions[i3 + 2]\r\n        \r\n        // Calculate radial distance\r\n        const distance = Math.sqrt(initX * initX + initY * initY)\r\n        \r\n        // Radial pulsation with wave delay based on distance\r\n        const waveDelay = distance * 1.5  // was: distance * 2\r\n        const waveTime = time * 1.5 - waveDelay + particleData.phases[i]  // was: time * 2\r\n        const radialPulse = Math.sin(waveTime) * 0.06 * (1 - distance / 2.5)  // was: 0.1 * (1 - distance / 2)\r\n        \r\n        // Organic movement\r\n        const organicX = Math.sin(time * 0.5 + particleData.phases[i]) * 0.015 * particleData.randomFactors[i3]  // was: time * 0.7, amplitude 0.02\r\n        const organicY = Math.cos(time * 0.5 + particleData.phases[i]) * 0.015 * particleData.randomFactors[i3 + 1]  // was: time * 0.7, amplitude 0.02\r\n        const organicZ = Math.sin(time * 0.4 + particleData.phases[i]) * 0.03 * particleData.randomFactors[i3 + 2]  // was: time * 0.5, amplitude 0.05\r\n        \r\n        // Breathing expansion\r\n        const breathScale = scale + radialPulse\r\n        \r\n        // Update position\r\n        positions.array[i3] = initX * breathScale + organicX\r\n        positions.array[i3 + 1] = initY * breathScale + organicY\r\n        positions.array[i3 + 2] = initZ + organicZ\r\n        \r\n        // Animate size based on breathing phase and distance\r\n        const baseSize = 0.08 * (1 - distance / 3)\r\n        const sizePulse = Math.sin(waveTime * 0.3) * 0.015  // was: 0.5 * 0.02\r\n        sizes.array[i] = baseSize * (0.6 + breathProgress * 0.6) + sizePulse  // was: (0.8 + breathProgress * 0.4)\r\n      }\r\n      \r\n      positions.needsUpdate = true\r\n      sizes.needsUpdate = true\r\n      \r\n      // Update material\r\n      const material = breathingRingRef.current.material as THREE.PointsMaterial\r\n      material.opacity = opacity\r\n      \r\n      // Gentle rotation\r\n      breathingRingRef.current.rotation.z += 0.0005  // was: 0.001\r\n    }\r\n      // Animate ripples\r\n    ripplesRef.current.children.forEach((child) => {\r\n      const ripple = child as THREE.Points\r\n      const age = (time * 2) % 12\r\n      const scale = 1 + age * 0.3\r\n      const opacity = Math.max(0, 0.6 - age * 0.05)\r\n      \r\n      ripple.scale.setScalar(scale)\r\n      ripple.rotation.z += 0.01\r\n      \r\n      if (ripple.material instanceof THREE.PointsMaterial) {\r\n        ripple.material.opacity = opacity\r\n      }\r\n      \r\n      if (opacity <= 0) {\r\n        ripplesRef.current.remove(ripple)\r\n        ripple.geometry.dispose()\r\n        if (ripple.material instanceof THREE.Material) {\r\n          ripple.material.dispose()\r\n        }\r\n      }\r\n    })\r\n  })\r\n  \r\n  return (\r\n    <group position={[0, 0, -3]}>\r\n      {/* Main breathing particles */}\r\n      <points ref={breathingRingRef} geometry={ringGeometry} material={ringMaterial} />\r\n      \r\n      {/* Relaxation ripples */}\r\n      <group ref={ripplesRef} />\r\n      \r\n      {/* Phase indicator particles */}\r\n      <points position={[0, -2, 0]}>\r\n        <bufferGeometry>\r\n          <bufferAttribute\r\n            attach=\"attributes-position\"\r\n            count={40}\r\n            array={(() => {\r\n              const positions = new Float32Array(40 * 3)\r\n              for (let i = 0; i < 40; i++) {\r\n                const angle = (i / 40) * Math.PI * 2\r\n                const radius = 0.15\r\n                positions[i * 3] = Math.cos(angle) * radius\r\n                positions[i * 3 + 1] = Math.sin(angle) * radius\r\n                positions[i * 3 + 2] = 0\r\n              }\r\n              return positions\r\n            })()}\r\n            itemSize={3}\r\n          />\r\n        </bufferGeometry>\r\n        <pointsMaterial \r\n          size={0.03}\r\n          color={breathPhase === 'hold' ? 0x7c3aed : 0x9333ea}\r\n          transparent \r\n          opacity={0.8}\r\n          blending={THREE.NormalBlending}\r\n          depthWrite={false}\r\n        />\r\n      </points>\r\n    </group>\r\n  )\r\n}","import { useRef, useEffect } from 'react'\r\nimport * as THREE from 'three'\r\n\r\nexport function useMouseTracking() {\r\n  const mouse = useRef(new THREE.Vector2())\r\n  \r\n  useEffect(() => {\r\n    const handleMouseMove = (event: MouseEvent) => {\r\n      // Exact same mouse tracking as reference code\r\n      mouse.current.x = (event.clientX / window.innerWidth) * 2 - 1\r\n      mouse.current.y = -(event.clientY / window.innerHeight) * 2 + 1\r\n    }\r\n    \r\n    document.addEventListener('mousemove', handleMouseMove)\r\n    \r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove)\r\n    }\r\n  }, [])\r\n  \r\n  return mouse.current\r\n}","import { Component, ErrorInfo, ReactNode } from 'react'\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n  fallback?: ReactNode\r\n  componentName?: string\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean\r\n  error?: Error\r\n}\r\n\r\n/**\r\n * Error Boundary for 3D Components\r\n * Gracefully handles Three.js and WebGL errors to prevent app crashes\r\n */\r\nclass ThreeDErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    // Update state so the next render will show the fallback UI\r\n    return { hasError: true, error }\r\n  }\r\n  componentDidCatch(_error: Error, errorInfo: ErrorInfo) {\r\n    // Log the error for monitoring    console.error(`3D Component Error in ${this.props.componentName || 'Unknown'}:`, _error)\r\n    console.error('Error Info:', errorInfo)\r\n    \r\n    // TODO: Report to error tracking service in production\r\n    // Example: Sentry, LogRocket, etc.\r\n    // errorTracker.captureException(error, { extra: errorInfo })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // Custom fallback UI or default\r\n      return this.props.fallback || (\r\n        <div \r\n          style={{\r\n            padding: '20px',\r\n            textAlign: 'center',\r\n            color: '#666',\r\n            fontSize: '14px',\r\n            backgroundColor: '#f8f9fa',\r\n            border: '1px solid #e9ecef',\r\n            borderRadius: '8px',\r\n            margin: '10px'\r\n          }}\r\n        >\r\n          <p>⚠️ 3D visualization temporarily unavailable</p>\r\n          <details style={{ marginTop: '10px', fontSize: '12px' }}>\r\n            <summary>Technical Details</summary>\r\n            <p style={{ margin: '5px 0' }}>\r\n              Component: {this.props.componentName || 'Unknown'}\r\n            </p>\r\n            <p style={{ margin: '5px 0', fontFamily: 'monospace' }}>\r\n              {this.state.error?.message}\r\n            </p>\r\n          </details>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ThreeDErrorBoundary\r\n","import { Suspense, useRef } from 'react'\r\nimport { Canvas, useFrame } from '@react-three/fiber'\r\nimport { Float } from '@react-three/drei'\r\nimport { Group } from 'three'\r\nimport { ProceduralPebble } from '../three-d/ProceduralPebble'\r\nimport { WaterShaderBackground } from '../three-d/WaterShaderBackground'\r\nimport { FloatingParticles } from '../three-d/FloatingParticles'\r\nimport { BreathingGuide } from '../three-d/BreathingGuide'\r\nimport { useMouseTracking } from '../../hooks/useMouseTracking'\r\nimport ThreeDErrorBoundary from '../ui/ThreeDErrorBoundary'\r\nimport styles from './HeroSection.module.css'\r\n\r\ninterface HeroSectionProps {\r\n  isMobile: boolean\r\n}\r\n\r\n// Create a rotating wrapper component\r\nfunction RotatingPebble({ children, speed = 1 }: { children: React.ReactNode, speed?: number }) {\r\n  const groupRef = useRef<Group>(null)\r\n    useFrame((_, delta) => {\r\n    if (groupRef.current) {\r\n      groupRef.current.rotation.y += delta * speed * 0.8 // Slow rotation\r\n      // groupRef.current.rotation.x += delta * speed * 0.05 // Very subtle wobble - removed for cleaner rotation\r\n    }\r\n  })\r\n  \r\n  return <group ref={groupRef}>{children}</group>\r\n}\r\n\r\nexport function HeroSection({ isMobile }: HeroSectionProps) {\r\n  const mouse = useMouseTracking()\r\n  \r\n  return (\r\n    <div className={`${styles.heroWrapper} ambient-glow`}>      {/* 3D Canvas Layer - positioned to center pebble above CTA button */}      <Canvas \r\n        className={styles.heroCanvas} \r\n        camera={{ position: [0, 0, 3.5], fov: 45, far: 100 }}\r\n      >\r\n        {/* Water shader background - same as reference code */}\r\n        <WaterShaderBackground />\r\n          {/* Floating particles - same as reference code */}\r\n        <FloatingParticles mouse={mouse} />\r\n        \r\n        {/* Breathing guide for meditation */}\r\n        <BreathingGuide intensity={0.8} />\r\n\r\n        {/* Enhanced lighting for clean Apple-inspired design */}\r\n        <pointLight color=\"#ffffff\" intensity={2.5} distance={60} position={[0, 0, 20]} />\r\n        <pointLight color=\"#ffffff\" intensity={2} distance={40} position={[10, 10, 15]} />\r\n        <pointLight color=\"#ffffff\" intensity={2} distance={40} position={[-10, -10, 15]} />\r\n        <ambientLight color=\"#ffffff\" intensity={0.8} />\r\n        <directionalLight position={[4, 6, 5]} intensity={1} color=\"#ffffff\" />\r\n        <directionalLight position={[-3, 4, 3]} color=\"#ffffff\" intensity={0.6} />\r\n          <ThreeDErrorBoundary componentName=\"ProceduralPebble\">\r\n          {/* Main pebble with gentle float - centered horizontally, positioned above CTA */}\r\n          <Suspense fallback={null}>            <Float floatIntensity={1.0} rotationIntensity={0.4} speed={0.6}>              <RotatingPebble speed={0.6}>                <group \r\n                  scale={isMobile ? [0.496, 0.248, 0.496] : [0.868, 0.434, 0.868]} /* Increased by 24% */\r\n                  position={[0, 0.1, 0]} /* Moved up and centered */\r\n                >                  <ProceduralPebble \r\n                    distance={5} \r\n                    quality=\"high\" \r\n                    enableTextures={true}\r\n                  />\r\n                </group>\r\n              </RotatingPebble>\r\n            </Float>\r\n          </Suspense>\r\n        </ThreeDErrorBoundary>      </Canvas>\r\n\r\n      {/* ROOT Title - positioned above the pebble in center */}\r\n      <h1 className={`${styles.rootTitleCenter} ${isMobile ? styles.mobile : ''}`}>\r\n        ROOT\r\n      </h1>\r\n\r\n      {/* Main Content with CTA button only */}\r\n      <div className={styles.mainContent}>\r\n        <button \r\n          className={`${styles.ctaButton}`}\r\n          aria-label=\"Start your wellness journey\"\r\n        >\r\n          Buy Me :)\r\n        </button>\r\n      </div>{/* Bottom-left positioned text where ROOT was */}\r\n      <p className={`${styles.subtitleBottomLeft} ${isMobile ? styles.mobile : ''}`}>\r\n        Companion for Emotional Embracing\r\n      </p>      {/* Right side subtitle - updated text */}\r\n      <p className={`${styles.subtitleRightSide} ${isMobile ? styles.mobile : ''}`}>\r\n        The Stone Elf offers a quiet space to welcome, understand, and grow with every feeling.\r\n      </p>\r\n\r\n      {/* App Store Buttons */}\r\n      <div className={`${styles.appButtons} ${isMobile ? styles.mobile : ''}`}>\r\n        <a \r\n          href=\"#\" \r\n          className={`${styles.appButton} ${styles.appStore}`}\r\n          aria-label=\"Download on the App Store\"\r\n        >\r\n          <div className={styles.appButtonContent}>\r\n            <svg className={styles.appIcon} viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path d=\"M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z\"/>\r\n            </svg>\r\n            <div className={styles.appButtonText}>\r\n              <span className={styles.downloadText}>Download on the</span>\r\n              <span className={styles.storeText}>App Store</span>\r\n            </div>\r\n          </div>\r\n        </a>\r\n        <a \r\n          href=\"#\" \r\n          className={`${styles.appButton} ${styles.googlePlay}`}\r\n          aria-label=\"Get it on Google Play\"\r\n        >\r\n          <div className={styles.appButtonContent}>\r\n            <svg className={styles.appIcon} viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path d=\"M3,20.5V3.5C3,2.91 3.34,2.39 3.84,2.15L13.69,12L3.84,21.85C3.34,21.6 3,21.09 3,20.5M16.81,15.12L6.05,21.34L14.54,12.85L16.81,15.12M20.16,10.81C20.5,11.08 20.75,11.5 20.75,12C20.75,12.5 20.53,12.9 20.18,13.18L17.89,14.5L15.39,12L17.89,9.5L20.16,10.81M6.05,2.66L16.81,8.88L14.54,11.15L6.05,2.66Z\"/>\r\n            </svg>\r\n            <div className={styles.appButtonText}>\r\n              <span className={styles.downloadText}>GET IT ON</span>\r\n              <span className={styles.storeText}>Google Play</span>\r\n            </div>\r\n          </div>\r\n        </a>      \r\n      </div>\r\n\r\n      {/* Scroll indicator */}\r\n      <svg className={styles.scrollCue} viewBox=\"0 0 24 36\" role=\"img\" aria-label=\"Scroll down\">\r\n        <path d=\"M12 4 v20\" />\r\n        <polyline points=\"6 18 12 24 18 18\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import { lazy } from 'react'\r\n\r\n/**\r\n * Lazy-loaded components for better performance\r\n * These components are loaded on-demand to reduce initial bundle size\r\n */\r\n\r\n// 3D Components - Heavy dependencies\r\nexport const ProceduralPebble = lazy(() => import('./three-d/ProceduralPebble').then(module => ({ default: module.ProceduralPebble })))\r\nexport const SceneManager = lazy(() => import('./three-d/SceneManager').then(module => ({ default: module.SceneManager })))\r\n\r\n// Section Components - Can be loaded after critical path\r\nexport const TabSection = lazy(() => import('./sections/TabSection').then(module => ({ default: module.TabSection })))\r\nexport const HoldMeditateSection = lazy(() => import('./sections/HoldMeditateSection').then(module => ({ default: module.HoldMeditateSection })))\r\n\r\n/**\r\n * Loading fallback component for Suspense boundaries\r\n */\r\nexport function ComponentLoadingFallback() {\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: '100%',\r\n      minHeight: '200px',\r\n      color: '#003b5e',\r\n      fontFamily: '\"Source Sans Pro\", sans-serif',\r\n      fontSize: '0.9rem',\r\n      opacity: 0.7\r\n    }}>\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        gap: '12px'\r\n      }}>\r\n        <div style={{\r\n          width: '24px',\r\n          height: '24px',\r\n          border: '2px solid #e0e7ff',\r\n          borderTop: '2px solid #003b5e',\r\n          borderRadius: '50%',\r\n          animation: 'spin 1s linear infinite'\r\n        }} />\r\n        <span>Loading meditation experience...</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Minimal loading spinner for 3D components\r\n */\r\nexport function ThreeDLoadingFallback() {\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      zIndex: 10,\r\n      color: '#003b5e',\r\n      fontFamily: '\"Source Sans Pro\", sans-serif',\r\n      fontSize: '0.8rem',\r\n      opacity: 0.6,\r\n      textAlign: 'center'\r\n    }}>\r\n      <div style={{\r\n        width: '20px',\r\n        height: '20px',\r\n        border: '2px solid rgba(0, 59, 94, 0.2)',\r\n        borderTop: '2px solid #003b5e',\r\n        borderRadius: '50%',\r\n        animation: 'spin 1s linear infinite',\r\n        margin: '0 auto 8px'\r\n      }} />\r\n      Initializing 3D...\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\ninterface ParticleBackgroundProps {\r\n  particleCount?: number\r\n}\r\n\r\nexport function ParticleBackground({ particleCount = 50 }: ParticleBackgroundProps) {\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return\r\n\r\n    const container = containerRef.current\r\n    const particles: HTMLDivElement[] = []\r\n\r\n    // Create particles\r\n    for (let i = 0; i < particleCount; i++) {\r\n      const particle = document.createElement('div')\r\n      particle.className = 'particle'\r\n      particle.style.cssText = `\r\n        position: absolute;\r\n        width: ${Math.random() * 4 + 2}px;\r\n        height: ${Math.random() * 4 + 2}px;\r\n        background: radial-gradient(circle, rgba(211, 189, 242, ${Math.random() * 0.6 + 0.2}), transparent);\r\n        border-radius: 50%;\r\n        left: ${Math.random() * 100}%;\r\n        animation-delay: ${Math.random() * 15}s;\r\n        animation-duration: ${Math.random() * 10 + 10}s;\r\n        animation-name: float-particle;\r\n        animation-iteration-count: infinite;\r\n        animation-timing-function: linear;\r\n        pointer-events: none;\r\n      `\r\n      \r\n      container.appendChild(particle)\r\n      particles.push(particle)\r\n    }\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      particles.forEach(particle => {\r\n        if (particle.parentNode) {\r\n          particle.parentNode.removeChild(particle)\r\n        }\r\n      })\r\n    }\r\n  }, [particleCount])\r\n\r\n  return (\r\n    <div \r\n      ref={containerRef}\r\n      className=\"particle-bg\"\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: -10,\r\n        overflow: 'hidden'\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { ScreenSizeHook } from '../types'\r\n\r\nexport const useScreenSize = (): ScreenSizeHook => {\r\n  const [isMobile, setIsMobile] = useState(false)\r\n  const [isTablet, setIsTablet] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkScreenSize = () => {\r\n      const width = window.innerWidth\r\n      setIsMobile(width <= 767)\r\n      setIsTablet(width > 767 && width <= 1024)\r\n    }\r\n    \r\n    checkScreenSize()\r\n    window.addEventListener('resize', checkScreenSize)\r\n    return () => window.removeEventListener('resize', checkScreenSize)\r\n  }, [])\r\n\r\n  return { isMobile, isTablet }\r\n}\r\n","// Accessibility Testing Utilities for Wellness Meditation App\r\n// Comprehensive validation of WCAG 2.1 AA compliance\r\n\r\nexport interface AccessibilityIssue {\r\n  element: Element\r\n  type: 'error' | 'warning' | 'info'\r\n  rule: string\r\n  description: string\r\n  impact: 'critical' | 'serious' | 'moderate' | 'minor'\r\n  recommendation: string\r\n}\r\n\r\nexport interface AccessibilityReport {\r\n  passed: number\r\n  failed: number\r\n  warnings: number\r\n  issues: AccessibilityIssue[]\r\n  score: number\r\n  compliance: 'AA' | 'A' | 'Non-compliant'\r\n}\r\n\r\n// Widget control - use this to programmatically show/hide the widget\r\nexport const AccessibilityWidgetControl = {\r\n  show: (): void => {\r\n    const existingWidget = document.getElementById('accessibility-monitor')\r\n    if (existingWidget) {\r\n      existingWidget.style.display = 'block'\r\n    } else {\r\n      // Create a custom event that the useAccessibilityMonitor hook can listen for\r\n      const event = new CustomEvent('a11y-widget-toggle', { detail: { visible: true } })\r\n      document.dispatchEvent(event)\r\n    }\r\n  },\r\n  \r\n  hide: (): void => {\r\n    const widget = document.getElementById('accessibility-monitor')\r\n    if (widget) {\r\n      widget.style.display = 'none'\r\n    }\r\n  },\r\n  \r\n  toggle: (): void => {\r\n    const widget = document.getElementById('accessibility-monitor')\r\n    if (widget) {\r\n      widget.style.display = widget.style.display === 'none' ? 'block' : 'none'\r\n    } else {\r\n      // Create a custom event that the useAccessibilityMonitor hook can listen for\r\n      const event = new CustomEvent('a11y-widget-toggle', { detail: { visible: true } })\r\n      document.dispatchEvent(event)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Main accessibility audit function\r\n * Runs comprehensive checks on the current page\r\n */\r\nexport async function runAccessibilityAudit(rootElement?: Element): Promise<AccessibilityReport> {\r\n  const root = rootElement || document.body\r\n  const issues: AccessibilityIssue[] = []\r\n  \r\n  try {\r\n    // Debug logging\r\n    console.debug('🎯 Starting accessibility audit...')\r\n    \r\n    // Core WCAG checks - wrap each in try/catch to prevent total failure\r\n    // Add debugging to track which checks are failing\r\n    const runCheck = (name: string, checkFn: () => AccessibilityIssue[]) => {\r\n      console.debug(`🎯 Running accessibility check: ${name}`)\r\n      try {\r\n        const results = checkFn()\r\n        console.debug(`✓ ${name} check completed: ${results.length} issues found`)\r\n        return results\r\n      } catch (error) {\r\n        console.warn(`✕ ${name} check failed:`, error)\r\n        return []\r\n      }\r\n    }\r\n    \r\n    issues.push(...runCheck('Color Contrast', () => checkColorContrast(root)))\r\n    issues.push(...runCheck('Keyboard Navigation', () => checkKeyboardNavigation(root)))\r\n    issues.push(...runCheck('ARIA Labels', () => checkAriaLabels(root)))\r\n    issues.push(...runCheck('Heading Structure', () => checkHeadingStructure(root)))\r\n    issues.push(...runCheck('Focus Management', () => checkFocusManagement(root)))\r\n    issues.push(...runCheck('Image Alt Text', () => checkImageAltText(root)))\r\n    issues.push(...runCheck('Form Labels', () => checkFormLabels(root)))\r\n    issues.push(...runCheck('Motion Preferences', () => checkMotionPreferences(root)))\r\n    issues.push(...runCheck('Semantic Structure', () => checkSemanticStructure(root)))\r\n    issues.push(...runCheck('Skip Links', () => checkSkipLinks(root)))\r\n  } catch (error) {\r\n    console.warn('Accessibility audit encountered errors:', error)\r\n  }\r\n    // Calculate metrics\r\n  const critical = issues.filter(i => i.impact === 'critical')\r\n  const serious = issues.filter(i => i.impact === 'serious')\r\n  const moderate = issues.filter(i => i.impact === 'moderate')\r\n  const minor = issues.filter(i => i.impact === 'minor')\r\n  \r\n  const failed = critical.length + serious.length\r\n  const warnings = moderate.length + minor.length\r\n  const total = failed + warnings\r\n  const passed = Math.max(0, 50 - total) // Assume 50 total checks\r\n  \r\n  // Calculate compliance score (0-100) - More balanced approach\r\n  // Each critical issue reduces the score by 10 points (instead of 20)\r\n  // Each serious issue reduces the score by 5 points (instead of 10)\r\n  // Give a base score of 70 even with some issues\r\n  const baseScore = 70\r\n  const penaltyCritical = Math.min(critical.length * 10, 50) // Cap at 50 points\r\n  const penaltySerious = Math.min(serious.length * 5, 20)   // Cap at 20 points\r\n  const penaltyModerate = Math.min(moderate.length * 2, 10) // Cap at 10 points\r\n  const penaltyMinor = Math.min(minor.length * 1, 5)       // Cap at 5 points\r\n  \r\n  const score = Math.max(0, baseScore - penaltyCritical - penaltySerious - penaltyModerate - penaltyMinor)\r\n  \r\n  // Determine compliance level\r\n  let compliance: 'AA' | 'A' | 'Non-compliant' = 'Non-compliant'\r\n  if (score >= 90 && critical.length === 0) {\r\n    compliance = 'AA'\r\n  } else if (score >= 70 && critical.length <= 2) {\r\n    compliance = 'A'\r\n  }\r\n  \r\n  return {\r\n    passed,\r\n    failed,\r\n    warnings,\r\n    issues,\r\n    score,\r\n    compliance\r\n  }\r\n}\r\n\r\n/**\r\n * Check color contrast ratios (WCAG 2.1 AA: 4.5:1 for normal text, 3:1 for large text)\r\n */\r\nfunction checkColorContrast(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  const textElements = root.querySelectorAll('p, span, a, button, h1, h2, h3, h4, h5, h6, li, td, th, label')\r\n  \r\n  textElements.forEach(element => {\r\n    try {\r\n      // Skip hidden or empty elements\r\n      const styles = getComputedStyle(element)\r\n      if (styles.display === 'none' || styles.visibility === 'hidden' || !element.textContent?.trim()) {\r\n        return\r\n      }\r\n      \r\n      // Skip elements with very small text (likely decorative)\r\n      const fontSize = parseFloat(styles.fontSize)\r\n      if (fontSize < 8) {\r\n        return\r\n      }\r\n      \r\n      const textColor = styles.color\r\n      const backgroundColor = getEffectiveBackgroundColor(element)\r\n      \r\n      if (textColor && backgroundColor) {\r\n        const contrast = calculateContrastRatio(textColor, backgroundColor)\r\n        const isLargeText = fontSize >= 18 || (fontSize >= 14 && (styles.fontWeight === 'bold' || parseInt(styles.fontWeight) >= 700))\r\n        \r\n        const requiredRatio = isLargeText ? 3.0 : 4.5\r\n        \r\n        // Only report if the contrast is significantly below requirements\r\n        // This helps reduce false positives\r\n        if (contrast < requiredRatio * 0.8) {\r\n          issues.push({\r\n            element,\r\n            type: 'error',\r\n            rule: 'WCAG 2.1 AA 1.4.3',\r\n            description: `Insufficient color contrast ratio: ${contrast.toFixed(2)}:1 (required: ${requiredRatio}:1)`,\r\n            impact: contrast < (requiredRatio * 0.6) ? 'critical' : 'serious',\r\n            recommendation: `Increase contrast between text (${textColor}) and background (${backgroundColor})`\r\n          })\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // Skip elements that can't be analyzed\r\n    }\r\n  })\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check keyboard navigation accessibility\r\n */\r\nfunction checkKeyboardNavigation(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  const interactiveElements = root.querySelectorAll('button, a, input, select, textarea, [tabindex], [onclick]')\r\n  \r\n  interactiveElements.forEach(element => {\r\n    const tabIndex = element.getAttribute('tabindex')\r\n    const isNativelyFocusable = ['button', 'a', 'input', 'select', 'textarea'].includes(element.tagName.toLowerCase())\r\n    \r\n    // Check for positive tabindex (anti-pattern)\r\n    if (tabIndex && parseInt(tabIndex) > 0) {\r\n      issues.push({\r\n        element,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 2.4.3',\r\n        description: 'Positive tabindex values create unpredictable tab order',\r\n        impact: 'moderate',\r\n        recommendation: 'Use tabindex=\"0\" or remove tabindex and rely on natural DOM order'\r\n      })\r\n    }\r\n    \r\n    // Check for unfocusable interactive elements\r\n    if (!isNativelyFocusable && tabIndex !== '0') {\r\n      if (element.hasAttribute('onclick') || element.getAttribute('role') === 'button') {\r\n        issues.push({\r\n          element,\r\n          type: 'error',\r\n          rule: 'WCAG 2.1 AA 2.1.1',\r\n          description: 'Interactive element is not keyboard accessible',\r\n          impact: 'serious',\r\n          recommendation: 'Add tabindex=\"0\" and keyboard event handlers'\r\n        })\r\n      }\r\n    }\r\n    \r\n    // Check for missing focus indicators\r\n    const styles = getComputedStyle(element, ':focus')\r\n    if (styles.outline === 'none' && !styles.boxShadow && !styles.border) {\r\n      issues.push({\r\n        element,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 2.4.7',\r\n        description: 'Missing visible focus indicator',\r\n        impact: 'moderate',\r\n        recommendation: 'Add :focus styles with visible outline or border'\r\n      })\r\n    }\r\n  })\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check ARIA labels and accessibility attributes\r\n */\r\nfunction checkAriaLabels(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  \r\n  // Check buttons without accessible names\r\n  const buttons = root.querySelectorAll('button')\r\n  buttons.forEach(button => {\r\n    // Skip hidden buttons\r\n    const styles = getComputedStyle(button)\r\n    if (styles.display === 'none' || styles.visibility === 'hidden') {\r\n      return\r\n    }\r\n    \r\n    // Check if button is part of a component that might handle accessibility differently\r\n    if (button.closest('[role=\"dialog\"], [role=\"menu\"], [role=\"toolbar\"], [role=\"tablist\"]')) {\r\n      return\r\n    }\r\n    \r\n    const hasText = button.textContent?.trim()\r\n    const hasAriaLabel = button.getAttribute('aria-label')\r\n    const hasAriaLabelledBy = button.getAttribute('aria-labelledby')\r\n    const hasTitle = button.getAttribute('title')\r\n    \r\n    // Check for icon-only buttons\r\n    const containsOnlyIcon = button.children.length === 1 && \r\n      (button.querySelector('svg, img, i.fa, i.icon, span.icon') !== null) && \r\n      !hasText\r\n      \r\n    if (!hasText && !hasAriaLabel && !hasAriaLabelledBy && !hasTitle) {\r\n      // Only mark as critical if it's a standalone button, not part of a component\r\n      const impact = containsOnlyIcon ? 'serious' : 'critical'\r\n      \r\n      issues.push({\r\n        element: button,\r\n        type: 'error',\r\n        rule: 'WCAG 2.1 AA 4.1.2',\r\n        description: 'Button has no accessible name',\r\n        impact,\r\n        recommendation: 'Add aria-label, visible text, or aria-labelledby attribute'\r\n      })\r\n    }\r\n  })\r\n  \r\n  // Check images without alt text - improved detection\r\n  const images = root.querySelectorAll('img')\r\n  images.forEach(img => {\r\n    // Skip hidden images\r\n    const styles = getComputedStyle(img)\r\n    if (styles.display === 'none' || styles.visibility === 'hidden') {\r\n      return\r\n    }\r\n    \r\n    // Skip very small images (likely decorative)\r\n    const width = img.width || parseInt(styles.width) || 0\r\n    const height = img.height || parseInt(styles.height) || 0\r\n    if (width < 24 || height < 24) {\r\n      return\r\n    }\r\n    \r\n    const alt = img.getAttribute('alt')\r\n    const ariaLabel = img.getAttribute('aria-label')\r\n    const role = img.getAttribute('role')\r\n    \r\n    // Check if image is inside a link or button that already has accessible text\r\n    const isInAccessibleContainer = Boolean(\r\n      img.closest('a, button')?.textContent?.trim() ||\r\n      img.closest('[aria-label]')\r\n    )\r\n    \r\n    if (alt === null && !ariaLabel && role !== 'presentation' && !isInAccessibleContainer) {\r\n      issues.push({\r\n        element: img,\r\n        type: 'error',\r\n        rule: 'WCAG 2.1 AA 1.1.1',\r\n        description: 'Image missing alt attribute',\r\n        impact: 'serious',\r\n        recommendation: 'Add descriptive alt text or role=\"presentation\" for decorative images'\r\n      })\r\n    }\r\n  })\r\n  \r\n  // Check form controls without labels - with improved detection\r\n  const formControls = root.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\r\n  formControls.forEach(control => {\r\n    // Skip hidden controls\r\n    const styles = getComputedStyle(control)\r\n    if (styles.display === 'none' || styles.visibility === 'hidden') {\r\n      return\r\n    }\r\n    \r\n    const id = control.getAttribute('id')\r\n    const ariaLabel = control.getAttribute('aria-label')\r\n    const ariaLabelledBy = control.getAttribute('aria-labelledby')\r\n    const title = control.getAttribute('title')\r\n    const placeholder = (control as HTMLInputElement).placeholder\r\n    \r\n    let hasLabel = false\r\n    if (id) {\r\n      const label = root.querySelector(`label[for=\"${id}\"]`)\r\n      hasLabel = !!label\r\n    }\r\n    \r\n    // Also check if control is wrapped in a label\r\n    const isWrappedInLabel = control.closest('label') !== null\r\n    \r\n    if (!hasLabel && !ariaLabel && !ariaLabelledBy && !title && !isWrappedInLabel) {\r\n      // Using placeholder alone is not sufficient for accessibility\r\n      const impact = placeholder ? 'moderate' : 'serious'\r\n      \r\n      issues.push({\r\n        element: control,\r\n        type: 'error',\r\n        rule: 'WCAG 2.1 AA 3.3.2',\r\n        description: placeholder ? 'Form control has placeholder but no label' : 'Form control has no associated label',\r\n        impact,\r\n        recommendation: 'Add a <label> element or aria-label attribute'\r\n      })\r\n    }\r\n  })\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check heading structure and hierarchy\r\n */\r\nfunction checkHeadingStructure(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  const headings = Array.from(root.querySelectorAll('h1, h2, h3, h4, h5, h6'))\r\n  \r\n  if (headings.length === 0) {\r\n    issues.push({\r\n      element: root,\r\n      type: 'warning',\r\n      rule: 'WCAG 2.1 AA 2.4.6',\r\n      description: 'No headings found on page',\r\n      impact: 'moderate',\r\n      recommendation: 'Add descriptive headings to structure content'\r\n    })\r\n    return issues\r\n  }\r\n  \r\n  // Check for h1\r\n  const h1Count = headings.filter(h => h.tagName === 'H1').length\r\n  if (h1Count === 0) {\r\n    issues.push({\r\n      element: root,\r\n      type: 'warning',\r\n      rule: 'WCAG 2.1 AA 2.4.6',\r\n      description: 'No H1 heading found',\r\n      impact: 'moderate',\r\n      recommendation: 'Add an H1 heading as the main page title'\r\n    })\r\n  } else if (h1Count > 1) {\r\n    issues.push({\r\n      element: root,\r\n      type: 'warning',\r\n      rule: 'WCAG 2.1 AA 2.4.6',\r\n      description: 'Multiple H1 headings found',\r\n      impact: 'minor',\r\n      recommendation: 'Use only one H1 per page for better structure'\r\n    })\r\n  }\r\n  \r\n  // Check heading hierarchy\r\n  let previousLevel = 0\r\n  headings.forEach(heading => {\r\n    const level = parseInt(heading.tagName.charAt(1))\r\n    \r\n    if (previousLevel > 0 && level > previousLevel + 1) {\r\n      issues.push({\r\n        element: heading,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 2.4.6',\r\n        description: `Heading level skipped (H${previousLevel} to H${level})`,\r\n        impact: 'minor',\r\n        recommendation: 'Use sequential heading levels for better structure'\r\n      })\r\n    }\r\n    \r\n    previousLevel = level\r\n  })\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check focus management and trapped focus\r\n */\r\nfunction checkFocusManagement(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  \r\n  // Check for modal dialogs without focus trapping\r\n  const modals = root.querySelectorAll('[role=\"dialog\"], [role=\"alertdialog\"], .modal')\r\n  modals.forEach(modal => {\r\n    const focusableElements = modal.querySelectorAll(\r\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n    )\r\n    \r\n    if (focusableElements.length === 0) {\r\n      issues.push({\r\n        element: modal,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 2.4.3',\r\n        description: 'Modal dialog has no focusable elements',\r\n        impact: 'moderate',\r\n        recommendation: 'Add focusable elements or implement focus management'\r\n      })\r\n    }\r\n  })\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check image alt text quality\r\n */\r\nfunction checkImageAltText(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  const images = root.querySelectorAll('img[alt]')\r\n  \r\n  images.forEach(img => {\r\n    const alt = img.getAttribute('alt')!\r\n    const src = img.getAttribute('src') || ''\r\n    \r\n    // Check for redundant alt text\r\n    if (alt.toLowerCase().includes('image') || alt.toLowerCase().includes('picture') || alt.toLowerCase().includes('photo')) {\r\n      issues.push({\r\n        element: img,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 1.1.1',\r\n        description: 'Alt text contains redundant words (image, picture, photo)',\r\n        impact: 'minor',\r\n        recommendation: 'Remove redundant words and focus on describing the content'\r\n      })\r\n    }\r\n    \r\n    // Check for filename as alt text\r\n    if (src.includes(alt) || alt.includes('.')) {\r\n      issues.push({\r\n        element: img,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 1.1.1',\r\n        description: 'Alt text appears to be a filename',\r\n        impact: 'moderate',\r\n        recommendation: 'Use descriptive alt text instead of filename'\r\n      })\r\n    }\r\n    \r\n    // Check for extremely long alt text\r\n    if (alt.length > 150) {\r\n      issues.push({\r\n        element: img,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 1.1.1',\r\n        description: 'Alt text is very long (>150 characters)',\r\n        impact: 'minor',\r\n        recommendation: 'Consider using shorter, more concise description'\r\n      })\r\n    }\r\n  })\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check form labels and error handling\r\n */\r\nfunction checkFormLabels(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  \r\n  // Check for required field indicators\r\n  const requiredFields = root.querySelectorAll('input[required], select[required], textarea[required]')\r\n  requiredFields.forEach(field => {\r\n    const ariaRequired = field.getAttribute('aria-required')\r\n    const hasRequiredIndicator = field.closest('label')?.textContent?.includes('*') ||\r\n                                 field.getAttribute('aria-label')?.includes('required') ||\r\n                                 ariaRequired === 'true'\r\n    \r\n    if (!hasRequiredIndicator) {\r\n      issues.push({\r\n        element: field,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 3.3.2',\r\n        description: 'Required field not clearly indicated',\r\n        impact: 'moderate',\r\n        recommendation: 'Add visual indicator (*) and aria-required=\"true\"'\r\n      })\r\n    }\r\n  })\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check motion preferences and animations\r\n */\r\nfunction checkMotionPreferences(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  \r\n  // Check for CSS animations without prefers-reduced-motion\r\n  const animatedElements = root.querySelectorAll('[style*=\"animation\"], [class*=\"animate\"], [class*=\"fade\"]')\r\n  \r\n  // This is a simplified check - in practice, you'd need to analyze CSS\r\n  if (animatedElements.length > 0) {\r\n    // Check if prefers-reduced-motion is respected in CSS\r\n    const hasReducedMotionSupport = Array.from(document.styleSheets).some(sheet => {\r\n      try {\r\n        return Array.from(sheet.cssRules).some(rule => \r\n          rule.cssText?.includes('prefers-reduced-motion')\r\n        )\r\n      } catch {\r\n        return false\r\n      }\r\n    })\r\n    \r\n    if (!hasReducedMotionSupport) {\r\n      issues.push({\r\n        element: root,\r\n        type: 'warning',\r\n        rule: 'WCAG 2.1 AA 2.3.3',\r\n        description: 'Animations found without prefers-reduced-motion support',\r\n        impact: 'moderate',\r\n        recommendation: 'Add @media (prefers-reduced-motion: reduce) CSS rules'\r\n      })\r\n    }\r\n  }\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check semantic HTML structure\r\n */\r\nfunction checkSemanticStructure(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  \r\n  // Check for proper landmark usage\r\n  const hasMain = root.querySelector('main, [role=\"main\"]')\r\n  \r\n  if (!hasMain) {\r\n    issues.push({\r\n      element: root,\r\n      type: 'warning',\r\n      rule: 'WCAG 2.1 AA 2.4.1',\r\n      description: 'No main landmark found',\r\n      impact: 'moderate',\r\n      recommendation: 'Add <main> element or role=\"main\" to main content area'\r\n    })\r\n  }\r\n  \r\n  // Check for divs that should be buttons\r\n  const clickableDivs = root.querySelectorAll('div[onclick], span[onclick]')\r\n  clickableDivs.forEach(div => {\r\n    if (!div.getAttribute('role') && !div.getAttribute('tabindex')) {\r\n      issues.push({\r\n        element: div,\r\n        type: 'error',\r\n        rule: 'WCAG 2.1 AA 4.1.2',\r\n        description: 'Clickable div/span without proper semantics',\r\n        impact: 'serious',\r\n        recommendation: 'Use <button> element or add role=\"button\" and tabindex=\"0\"'\r\n      })\r\n    }\r\n  })\r\n  \r\n  return issues\r\n}\r\n\r\n/**\r\n * Check skip links for keyboard navigation\r\n */\r\nfunction checkSkipLinks(root: Element): AccessibilityIssue[] {\r\n  const issues: AccessibilityIssue[] = []\r\n  \r\n  const skipLink = root.querySelector('a[href=\"#main\"], a[href*=\"skip\"]')\r\n  if (!skipLink) {\r\n    issues.push({\r\n      element: root,\r\n      type: 'warning',\r\n      rule: 'WCAG 2.1 AA 2.4.1',\r\n      description: 'No skip link found for keyboard navigation',\r\n      impact: 'moderate',\r\n      recommendation: 'Add a \"Skip to main content\" link at the beginning of the page'\r\n    })\r\n  }\r\n  \r\n  return issues\r\n}\r\n\r\n// Utility functions\r\n\r\nfunction getEffectiveBackgroundColor(element: Element): string | null {\r\n  try {\r\n    let current: Element | null = element\r\n    let foundBackgroundColor = false\r\n    let backgroundColor = 'rgba(0, 0, 0, 0)'\r\n    \r\n    // Try to find a background color walking up the DOM tree\r\n    while (current && current !== document.body && !foundBackgroundColor) {\r\n      const styles = getComputedStyle(current)\r\n      backgroundColor = styles.backgroundColor\r\n      \r\n      if (backgroundColor && backgroundColor !== 'rgba(0, 0, 0, 0)' && backgroundColor !== 'transparent') {\r\n        foundBackgroundColor = true\r\n        break\r\n      }\r\n      \r\n      current = current.parentElement\r\n    }\r\n    \r\n    // If we didn't find a background color, use the body's background or default to white\r\n    if (!foundBackgroundColor) {\r\n      backgroundColor = getComputedStyle(document.body).backgroundColor || 'rgb(255, 255, 255)'\r\n    }\r\n    \r\n    return backgroundColor\r\n  } catch (error) {\r\n    console.warn('Error getting effective background color:', error)\r\n    return 'rgb(255, 255, 255)' // Default to white as fallback\r\n  }\r\n}\r\n\r\nfunction calculateContrastRatio(color1: string, color2: string): number {\r\n  try {\r\n    const rgb1 = parseColor(color1)\r\n    const rgb2 = parseColor(color2)\r\n    \r\n    if (!rgb1 || !rgb2) return 4.5 // Return default passing value on parsing error\r\n    \r\n    const l1 = getRelativeLuminance(rgb1)\r\n    const l2 = getRelativeLuminance(rgb2)\r\n    \r\n    const lighter = Math.max(l1, l2)\r\n    const darker = Math.min(l1, l2)\r\n    \r\n    return (lighter + 0.05) / (darker + 0.05)\r\n  } catch (error) {\r\n    console.warn('Error calculating contrast ratio:', error)\r\n    return 4.5 // Return default passing value on error\r\n  }\r\n}\r\n\r\nfunction parseColor(color: string): [number, number, number] | null {\r\n  try {\r\n    // Handle rgba format\r\n    let match = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*[\\d.]+)?\\)/)\r\n    if (match) {\r\n      return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])]\r\n    }\r\n    \r\n    // Handle hex format\r\n    if (color.startsWith('#')) {\r\n      let hex = color.slice(1)\r\n      // Convert shorthand hex (#abc) to full form (#aabbcc)\r\n      if (hex.length === 3) {\r\n        hex = hex.split('').map(char => char + char).join('')\r\n      }\r\n      \r\n      if (hex.length === 6) {\r\n        const r = parseInt(hex.slice(0, 2), 16)\r\n        const g = parseInt(hex.slice(2, 4), 16)\r\n        const b = parseInt(hex.slice(4, 6), 16)\r\n        return [r, g, b]\r\n      }\r\n    }\r\n    \r\n    // Handle named colors\r\n    const namedColors: Record<string, [number, number, number]> = {\r\n      'white': [255, 255, 255],\r\n      'black': [0, 0, 0],\r\n      'red': [255, 0, 0],\r\n      'green': [0, 128, 0],\r\n      'blue': [0, 0, 255],\r\n      'yellow': [255, 255, 0],\r\n      // Add more as needed\r\n    }\r\n    \r\n    const lowerColor = color.toLowerCase()\r\n    if (lowerColor in namedColors) {\r\n      return namedColors[lowerColor]\r\n    }\r\n    \r\n    return [0, 0, 0] // Default to black\r\n  } catch (error) {\r\n    console.warn('Error parsing color:', color, error)\r\n    return null\r\n  }\r\n}\r\n\r\nfunction getRelativeLuminance([r, g, b]: [number, number, number]): number {\r\n  try {\r\n    // Normalize RGB values to the range [0, 1]\r\n    const sRGB = [r / 255, g / 255, b / 255].map(c => {\r\n      // Convert sRGB to linear RGB\r\n      return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4)\r\n    })\r\n    \r\n    // Weighted sum (perceived brightness formula)\r\n    return 0.2126 * sRGB[0] + 0.7152 * sRGB[1] + 0.0722 * sRGB[2]\r\n  } catch (error) {\r\n    console.warn('Error calculating relative luminance:', error)\r\n    return 0.5 // Return mid-range value on error\r\n  }\r\n}\r\n\r\n/**\r\n * Generate accessibility report as HTML\r\n */\r\nexport function generateAccessibilityReport(report: AccessibilityReport): string {\r\n  const { passed, failed, issues, score, compliance } = report\r\n  \r\n  const severityColors = {\r\n    critical: '#dc3545',\r\n    serious: '#fd7e14',\r\n    moderate: '#ffc107',\r\n    minor: '#17a2b8'\r\n  }\r\n  \r\n  return `\r\n    <div style=\"font-family: system-ui, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px;\">\r\n      <h1 style=\"color: #333;\">Accessibility Audit Report</h1>\r\n      \r\n      <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 20px 0;\">\r\n        <div style=\"background: #28a745; color: white; padding: 20px; border-radius: 8px; text-align: center;\">\r\n          <h3 style=\"margin: 0;\">Score</h3>\r\n          <p style=\"margin: 10px 0; font-size: 2em; font-weight: bold;\">${score}/100</p>\r\n        </div>\r\n        <div style=\"background: #17a2b8; color: white; padding: 20px; border-radius: 8px; text-align: center;\">\r\n          <h3 style=\"margin: 0;\">Compliance</h3>\r\n          <p style=\"margin: 10px 0; font-size: 1.5em; font-weight: bold;\">${compliance}</p>\r\n        </div>\r\n        <div style=\"background: #6c757d; color: white; padding: 20px; border-radius: 8px; text-align: center;\">\r\n          <h3 style=\"margin: 0;\">Passed</h3>\r\n          <p style=\"margin: 10px 0; font-size: 2em; font-weight: bold;\">${passed}</p>\r\n        </div>\r\n        <div style=\"background: #dc3545; color: white; padding: 20px; border-radius: 8px; text-align: center;\">\r\n          <h3 style=\"margin: 0;\">Failed</h3>\r\n          <p style=\"margin: 10px 0; font-size: 2em; font-weight: bold;\">${failed}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <h2 style=\"color: #333; margin-top: 40px;\">Issues Found (${issues.length})</h2>\r\n      \r\n      ${issues.map((issue, _index) => `\r\n        <div style=\"border: 1px solid #ddd; border-radius: 8px; margin: 10px 0; padding: 15px;\">\r\n          <div style=\"display: flex; align-items: center; margin-bottom: 10px;\">\r\n            <span style=\"background: ${severityColors[issue.impact]}; color: white; padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: bold; text-transform: uppercase;\">\r\n              ${issue.impact}\r\n            </span>\r\n            <span style=\"margin-left: 10px; color: #666; font-size: 14px;\">${issue.rule}</span>\r\n          </div>\r\n          <h4 style=\"margin: 0 0 10px 0; color: #333;\">${issue.description}</h4>\r\n          <p style=\"margin: 0; color: #28a745;\"><strong>Recommendation:</strong> ${issue.recommendation}</p>\r\n          <details style=\"margin-top: 10px;\">\r\n            <summary style=\"cursor: pointer; color: #007bff;\">View Element</summary>\r\n            <pre style=\"background: #f8f9fa; padding: 10px; border-radius: 4px; margin-top: 10px; overflow-x: auto; font-size: 12px;\">${issue.element.outerHTML.substring(0, 200)}${issue.element.outerHTML.length > 200 ? '...' : ''}</pre>\r\n          </details>\r\n        </div>\r\n      `).join('')}\r\n      \r\n      <div style=\"background: #f8f9fa; padding: 20px; border-radius: 8px; margin-top: 40px;\">\r\n        <h3 style=\"color: #333; margin-top: 0;\">Next Steps</h3>\r\n        <ol style=\"color: #666;\">\r\n          <li>Address critical and serious issues first</li>\r\n          <li>Test with actual screen readers (NVDA, JAWS, VoiceOver)</li>\r\n          <li>Validate keyboard navigation manually</li>\r\n          <li>Run automated tools like axe-core for additional validation</li>\r\n          <li>Consider user testing with people who use assistive technologies</li>\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n\r\n/**\r\n * Export report to console for development\r\n */\r\nexport function logAccessibilityReport(report: AccessibilityReport): void {\r\n  console.group('🎯 Accessibility Audit Report')\r\n  console.log(`Score: ${report.score}/100 | Compliance: ${report.compliance}`)\r\n  console.log(`Passed: ${report.passed} | Failed: ${report.failed} | Warnings: ${report.warnings}`)\r\n  \r\n  if (report.issues.length > 0) {\r\n    console.group('Issues Found:')\r\n    report.issues.forEach((issue, _index) => {\r\n      const icon = issue.impact === 'critical' ? '🚨' : issue.impact === 'serious' ? '⚠️' : issue.impact === 'moderate' ? '📝' : 'ℹ️'\r\n      console.groupCollapsed(`${icon} ${issue.impact.toUpperCase()}: ${issue.description}`)\r\n      console.log('Rule:', issue.rule)\r\n      console.log('Recommendation:', issue.recommendation)\r\n      console.log('Element:', issue.element)\r\n      console.groupEnd()\r\n    })\r\n    console.groupEnd()\r\n  }\r\n    console.groupEnd()\r\n}\r\n","// React Hook for Accessibility Testing Integration\r\n// Automatically runs accessibility audits in development mode\r\n\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { runAccessibilityAudit, logAccessibilityReport, AccessibilityReport } from '../utils/AccessibilityAuditor'\r\n\r\ninterface UseAccessibilityAuditOptions {\r\n  enabled?: boolean\r\n  autoRun?: boolean\r\n  logToConsole?: boolean\r\n  debounceMs?: number\r\n  rootSelector?: string\r\n}\r\n\r\ninterface AccessibilityAuditState {\r\n  report: AccessibilityReport | null\r\n  isRunning: boolean\r\n  lastRun: Date | null\r\n  runAudit: () => Promise<void>\r\n  clearReport: () => void\r\n}\r\n\r\n/**\r\n * Hook for accessibility testing in development\r\n * Provides automatic and manual accessibility auditing\r\n */\r\nexport function useAccessibilityAudit(options: UseAccessibilityAuditOptions = {}): AccessibilityAuditState {\r\n  const {\r\n    enabled = import.meta.env.DEV, // Only in development by default\r\n    autoRun = false,\r\n    logToConsole = true,\r\n    debounceMs = 1000,\r\n    rootSelector = 'main'\r\n  } = options\r\n  \r\n  const [report, setReport] = useState<AccessibilityReport | null>(null)\r\n  const [isRunning, setIsRunning] = useState(false)\r\n  const [lastRun, setLastRun] = useState<Date | null>(null)\r\n  \r\n  const debounceRef = useRef<number>()\r\n  const lastDOMChangeRef = useRef<Date>(new Date())\r\n  \r\n  // Manual audit trigger\r\n  const runAudit = async (): Promise<void> => {\r\n    if (!enabled || isRunning) return\r\n    \r\n    setIsRunning(true)\r\n    \r\n    try {\r\n      const rootElement = document.querySelector(rootSelector) as Element || document.body\r\n      const auditReport = await runAccessibilityAudit(rootElement)\r\n      \r\n      setReport(auditReport)\r\n      setLastRun(new Date())\r\n      \r\n      if (logToConsole) {\r\n        logAccessibilityReport(auditReport)\r\n      }\r\n      \r\n      // Also log summary for quick reference\r\n      if (import.meta.env.DEV) {\r\n        const { score, compliance, issues } = auditReport\r\n        const criticalIssues = issues.filter(i => i.impact === 'critical').length\r\n        const seriousIssues = issues.filter(i => i.impact === 'serious').length\r\n        \r\n        if (criticalIssues > 0 || seriousIssues > 0) {\r\n          console.warn(\r\n            `🎯 Accessibility: ${score}/100 (${compliance}) - ${criticalIssues} critical, ${seriousIssues} serious issues`\r\n          )\r\n        } else {\r\n          console.info(\r\n            `✅ Accessibility: ${score}/100 (${compliance}) - No critical issues found`\r\n          )\r\n        }\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Accessibility audit failed:', error)\r\n    } finally {\r\n      setIsRunning(false)\r\n    }\r\n  }\r\n  \r\n  // Clear report\r\n  const clearReport = (): void => {\r\n    setReport(null)\r\n    setLastRun(null)\r\n  }\r\n  \r\n  // Debounced audit runner\r\n  const debouncedAudit = (): void => {\r\n    if (debounceRef.current) {\r\n      clearTimeout(debounceRef.current)\r\n    }\r\n    \r\n    debounceRef.current = setTimeout(() => {\r\n      runAudit()\r\n    }, debounceMs)\r\n  }\r\n  \r\n  // Auto-run on DOM changes (if enabled)\r\n  useEffect(() => {\r\n    if (!enabled || !autoRun) return\r\n    \r\n    const observer = new MutationObserver((mutations) => {\r\n      // Check if mutations are significant enough to warrant re-audit\r\n      const significantChange = mutations.some(mutation => \r\n        mutation.type === 'childList' && \r\n        (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0) ||\r\n        mutation.type === 'attributes' && \r\n        ['aria-label', 'aria-labelledby', 'aria-describedby', 'role', 'tabindex', 'alt'].includes(mutation.attributeName || '')\r\n      )\r\n      \r\n      if (significantChange) {\r\n        lastDOMChangeRef.current = new Date()\r\n        debouncedAudit()\r\n      }\r\n    })\r\n    \r\n    const rootElement = document.querySelector(rootSelector) || document.body\r\n    observer.observe(rootElement, {\r\n      childList: true,\r\n      subtree: true,\r\n      attributes: true,\r\n      attributeFilter: ['aria-label', 'aria-labelledby', 'aria-describedby', 'role', 'tabindex', 'alt', 'class']\r\n    })\r\n    \r\n    // Run initial audit\r\n    setTimeout(debouncedAudit, 500)\r\n    \r\n    return () => {\r\n      observer.disconnect()\r\n      if (debounceRef.current) {\r\n        clearTimeout(debounceRef.current)\r\n      }\r\n    }\r\n  }, [enabled, autoRun, rootSelector, debounceMs])\r\n  \r\n  // Cleanup\r\n  useEffect(() => {\r\n    return () => {\r\n      if (debounceRef.current) {\r\n        clearTimeout(debounceRef.current)\r\n      }\r\n    }\r\n  }, [])\r\n  \r\n  return {\r\n    report,\r\n    isRunning,\r\n    lastRun,\r\n    runAudit,\r\n    clearReport\r\n  }\r\n}\r\n\r\n/**\r\n * Hook for live accessibility monitoring (displays floating widget)\r\n * Shows real-time accessibility status during development\r\n */\r\nexport function useAccessibilityMonitor(enabled: boolean = import.meta.env.DEV): void {\r\n  // Only show widget in development by default\r\n  const isProduction = !import.meta.env.DEV\r\n  const [isWidgetVisible, setIsWidgetVisible] = useState(enabled && !isProduction)\r\n  \r\n  const { report, isRunning, runAudit } = useAccessibilityAudit({\r\n    enabled,\r\n    autoRun: true,\r\n    logToConsole: false,\r\n    debounceMs: 2000\r\n  })\r\n  \r\n  // Listen for programmatic toggle events\r\n  useEffect(() => {\r\n    const handleWidgetToggle = (e: Event) => {\r\n      const customEvent = e as CustomEvent\r\n      if (customEvent.detail && customEvent.detail.visible !== undefined) {\r\n        setIsWidgetVisible(customEvent.detail.visible)\r\n      } else {\r\n        setIsWidgetVisible(prev => !prev)\r\n      }\r\n    }\r\n    \r\n    document.addEventListener('a11y-widget-toggle', handleWidgetToggle)\r\n    \r\n    return () => {\r\n      document.removeEventListener('a11y-widget-toggle', handleWidgetToggle)\r\n    }\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    if (!enabled) return\r\n    \r\n    // Create or update floating accessibility widget\r\n    let widget = document.getElementById('accessibility-monitor')\r\n    let isMinimized = false\r\n    \r\n    // If widget should not be visible, cleanup and return\r\n    if (!isWidgetVisible) {\r\n      if (widget) {\r\n        widget.remove()\r\n      }\r\n      return\r\n    }\r\n    \r\n    if (!widget) {\r\n      widget = document.createElement('div')\r\n      widget.id = 'accessibility-monitor'\r\n      widget.style.cssText = `\r\n        position: fixed;\r\n        top: 20px;\r\n        right: 20px;\r\n        background: white;\r\n        border: 2px solid #ddd;\r\n        border-radius: 8px;\r\n        padding: 10px;\r\n        font-family: system-ui, sans-serif;\r\n        font-size: 12px;\r\n        box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n        z-index: 10000;\r\n        max-width: 200px;\r\n        cursor: default;\r\n        transition: all 0.2s ease;\r\n        opacity: 0.85;\r\n      `\r\n      \r\n      document.body.appendChild(widget)\r\n    }\r\n    \r\n    // Provide default values if report isn't available yet\r\n    const displayReport = report || {\r\n      score: 100,\r\n      compliance: 'AA' as const,\r\n      issues: [],\r\n      passed: 0,\r\n      failed: 0,\r\n      warnings: 0\r\n    }\r\n    \r\n    const { score, compliance, issues } = displayReport\r\n    const criticalCount = issues.filter(i => i.impact === 'critical').length\r\n    const seriousCount = issues.filter(i => i.impact === 'serious').length\r\n    \r\n    // Color coding based on score\r\n    let color = '#28a745' // Green\r\n    if (score < 60) color = '#dc3545' // Red\r\n    else if (score < 80) color = '#ffc107' // Yellow\r\n    else if (score < 90) color = '#fd7e14' // Orange\r\n    \r\n    widget.style.borderColor = color\r\n    \r\n    // Create widget content with proper controls\r\n    widget.innerHTML = `\r\n      <div style=\"display: flex; align-items: center; justify-content: space-between; margin-bottom: 5px;\">\r\n        <div style=\"display: flex; align-items: center;\">\r\n          <div style=\"width: 12px; height: 12px; background: ${color}; border-radius: 50%; margin-right: 8px;\"></div>\r\n          <strong>A11y Score: ${score}/100</strong>\r\n        </div>\r\n        <div>\r\n          <button id=\"a11y-minimize-btn\" style=\"background: none; border: none; cursor: pointer; font-size: 14px; padding: 0 5px; margin-right: 2px;\" aria-label=\"Minimize accessibility widget\">_</button>\r\n          <button id=\"a11y-close-btn\" style=\"background: none; border: none; cursor: pointer; font-size: 14px; padding: 0 5px;\" aria-label=\"Close accessibility widget\">×</button>\r\n        </div>\r\n      </div>\r\n      <div style=\"color: #666; margin-bottom: 5px;\">\r\n        Compliance: <strong>${compliance}</strong>\r\n      </div>\r\n      <div style=\"color: #666; font-size: 11px;\">\r\n        ${criticalCount} critical, ${seriousCount} serious\r\n      </div>\r\n      <button id=\"a11y-audit-btn\" style=\"width: 100%; margin-top: 5px; padding: 4px; background: #f5f5f5; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; font-size: 11px;\">\r\n        ${isRunning ? 'Running audit...' : 'Run Accessibility Audit'}\r\n      </button>\r\n    `\r\n    \r\n    // Update widget based on minimized state\r\n    if (isMinimized) {\r\n      widget.style.transform = 'translateX(80%)'\r\n      widget.style.opacity = '0.5'\r\n    } else {\r\n      widget.style.transform = 'translateX(0)'\r\n      widget.style.opacity = '0.85'\r\n    }\r\n    \r\n    // Handle audit button click\r\n    const auditButton = document.getElementById('a11y-audit-btn')\r\n    if (auditButton) {\r\n      // Remove any existing listeners to prevent duplicates\r\n      const newAuditButton = auditButton.cloneNode(true)\r\n      auditButton.parentNode?.replaceChild(newAuditButton, auditButton)\r\n      \r\n      newAuditButton.addEventListener('click', (e) => {\r\n        e.stopPropagation()\r\n        runAudit()\r\n      })\r\n    }\r\n    \r\n    // Handle minimize button click\r\n    const minimizeButton = document.getElementById('a11y-minimize-btn')\r\n    if (minimizeButton) {\r\n      // Remove any existing listeners to prevent duplicates\r\n      const newMinimizeButton = minimizeButton.cloneNode(true)\r\n      minimizeButton.parentNode?.replaceChild(newMinimizeButton, minimizeButton)\r\n      \r\n      newMinimizeButton.addEventListener('click', (e) => {\r\n        e.stopPropagation()\r\n        isMinimized = !isMinimized\r\n        if (widget) {\r\n          widget.style.transform = isMinimized ? 'translateX(80%)' : 'translateX(0)'\r\n          widget.style.opacity = isMinimized ? '0.5' : '0.85'\r\n        }\r\n      })\r\n    }\r\n    \r\n    // Handle close button click\r\n    const closeButton = document.getElementById('a11y-close-btn')\r\n    if (closeButton) {\r\n      // Remove any existing listeners to prevent duplicates\r\n      const newCloseButton = closeButton.cloneNode(true)\r\n      closeButton.parentNode?.replaceChild(newCloseButton, closeButton)\r\n      \r\n      newCloseButton.addEventListener('click', (e) => {\r\n        e.stopPropagation()\r\n        setIsWidgetVisible(false)\r\n      })\r\n    }\r\n    \r\n    // Cleanup function\r\n    const cleanup = () => {\r\n      const existingWidget = document.getElementById('accessibility-monitor')\r\n      if (existingWidget) {\r\n        existingWidget.remove()\r\n      }\r\n    }\r\n    \r\n    return cleanup\r\n  }, [enabled, isWidgetVisible, report, isRunning, runAudit])\r\n  \r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      const widget = document.getElementById('accessibility-monitor')\r\n      if (widget) {\r\n        widget.remove()\r\n      }\r\n    }\r\n  }, [])\r\n}\r\n\r\n/**\r\n * Hook for keyboard navigation testing\r\n * Tracks and logs keyboard navigation patterns\r\n */\r\nexport function useKeyboardNavigationTracker(enabled: boolean = import.meta.env.DEV): void {\r\n  useEffect(() => {\r\n    if (!enabled) return\r\n    \r\n    let tabSequence: Element[] = []\r\n    let isTracking = false\r\n    \r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'Tab') {\r\n        if (!isTracking) {\r\n          isTracking = true\r\n          tabSequence = []\r\n          console.group('🎹 Keyboard Navigation Tracking Started')\r\n        }\r\n        \r\n        setTimeout(() => {\r\n          const activeElement = document.activeElement\r\n          if (activeElement && activeElement !== document.body) {\r\n            tabSequence.push(activeElement)\r\n            \r\n            // Log focus changes\r\n            const elementInfo = `${activeElement.tagName.toLowerCase()}${activeElement.id ? '#' + activeElement.id : ''}${activeElement.className ? '.' + activeElement.className.split(' ').join('.') : ''}`\r\n            console.log(`${tabSequence.length}. Focus: ${elementInfo}`)\r\n            \r\n            // Check for accessibility issues\r\n            const tabIndex = activeElement.getAttribute('tabindex')\r\n            const ariaLabel = activeElement.getAttribute('aria-label')\r\n            const hasVisibleText = activeElement.textContent?.trim()\r\n            \r\n            if (tabIndex && parseInt(tabIndex) > 0) {\r\n              console.warn('⚠️ Positive tabindex detected:', activeElement)\r\n            }\r\n            \r\n            if (!hasVisibleText && !ariaLabel && activeElement.tagName === 'BUTTON') {\r\n              console.warn('⚠️ Button without accessible text:', activeElement)\r\n            }\r\n            \r\n            // Check focus visibility\r\n            const styles = getComputedStyle(activeElement, ':focus')\r\n            if (styles.outline === 'none' && !styles.boxShadow) {\r\n              console.warn('⚠️ Element may not have visible focus indicator:', activeElement)\r\n            }\r\n          }\r\n        }, 0)\r\n      } else if (event.key === 'Escape' && isTracking) {\r\n        // Stop tracking on Escape\r\n        console.log(`🎹 Navigation completed. Total focus changes: ${tabSequence.length}`)\r\n        console.groupEnd()\r\n        isTracking = false\r\n        tabSequence = []\r\n      }\r\n    }\r\n    \r\n    const handleFocusIn = (event: FocusEvent) => {\r\n      if (isTracking && event.target instanceof Element) {\r\n        // Additional focus tracking\r\n        const isFocusable = event.target.matches('button, a, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\r\n        if (!isFocusable) {\r\n          console.warn('⚠️ Focus on non-standard element:', event.target)\r\n        }\r\n      }\r\n    }\r\n    \r\n    document.addEventListener('keydown', handleKeyDown)\r\n    document.addEventListener('focusin', handleFocusIn)\r\n    \r\n    // Log initial instructions\r\n    if (import.meta.env.DEV) {\r\n      console.info('🎹 Keyboard Navigation Tracker: Press Tab to start tracking, Escape to stop')\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      document.removeEventListener('focusin', handleFocusIn)\r\n      \r\n      if (isTracking) {\r\n        console.groupEnd()\r\n      }\r\n    }\r\n  }, [enabled])\r\n}\r\n\r\n/**\r\n * Hook for screen reader testing simulation\r\n * Simulates screen reader announcements in console\r\n */\r\nexport function useScreenReaderSimulator(enabled: boolean = import.meta.env.DEV): void {\r\n  useEffect(() => {\r\n    if (!enabled) return\r\n    \r\n    // Track ARIA live regions\r\n    const liveRegions = document.querySelectorAll('[aria-live]')\r\n    const observers: MutationObserver[] = []\r\n    \r\n    liveRegions.forEach(region => {\r\n      const politeness = region.getAttribute('aria-live') || 'polite'\r\n      \r\n      const observer = new MutationObserver((mutations) => {\r\n        mutations.forEach(mutation => {\r\n          if (mutation.type === 'childList' || mutation.type === 'characterData') {\r\n            const text = (mutation.target as Element).textContent?.trim()\r\n            if (text) {\r\n              const urgency = politeness === 'assertive' ? '🔊 ASSERTIVE' : '🔇 POLITE'\r\n              console.info(`📢 Screen Reader (${urgency}): \"${text}\"`)\r\n            }\r\n          }\r\n        })\r\n      })\r\n      \r\n      observer.observe(region, {\r\n        childList: true,\r\n        characterData: true,\r\n        subtree: true\r\n      })\r\n      \r\n      observers.push(observer)\r\n    })\r\n    \r\n    // Track focus changes for screen reader context\r\n    const handleFocusChange = (event: FocusEvent) => {\r\n      if (event.target instanceof Element) {\r\n        const element = event.target\r\n        const ariaLabel = element.getAttribute('aria-label')\r\n        const ariaLabelledBy = element.getAttribute('aria-labelledby')\r\n        const text = element.textContent?.trim()\r\n        const role = element.getAttribute('role') || element.tagName.toLowerCase()\r\n        \r\n        let announcement = ''\r\n        \r\n        if (ariaLabel) {\r\n          announcement = ariaLabel\r\n        } else if (ariaLabelledBy) {\r\n          const labelElement = document.getElementById(ariaLabelledBy)\r\n          announcement = labelElement?.textContent?.trim() || ''\r\n        } else if (text) {\r\n          announcement = text\r\n        } else {\r\n          announcement = `unlabeled ${role}`\r\n        }\r\n        \r\n        if (announcement) {\r\n          console.info(`👁️ Screen Reader Focus: \"${announcement}\" (${role})`)\r\n        }\r\n      }\r\n    }\r\n    \r\n    document.addEventListener('focusin', handleFocusChange)\r\n      return () => {\r\n      observers.forEach(observer => observer.disconnect())\r\n      document.removeEventListener('focusin', handleFocusChange)\r\n    }\r\n  }, [enabled])\r\n}\r\n\r\nexport default {\r\n  useAccessibilityAudit,\r\n  useAccessibilityMonitor,\r\n  useKeyboardNavigationTracker,\r\n  useScreenReaderSimulator\r\n}\r\n","import { TabContentData } from '../types'\r\n\r\nexport const tabContent: TabContentData = {\r\n  'anchor-focus': {\r\n    title: 'Strengthen focus through pulse-guided breath',\r\n    features: [\r\n      'Stay present in moments that overwhelm',\r\n      'Reduce spiraling thoughts with steady rhythm'\r\n    ],\r\n    description: 'Let rhythmic sensations and guided breath redirect racing thoughts—helping your mind slow down and return to calm, one pulse at a time.'\r\n  },\r\n  'release-stress': {\r\n    title: 'Release tension with synchronized breathing',\r\n    features: [\r\n      'Lower stress hormones naturally',\r\n      'Activate your body\\'s relaxation response'\r\n    ],\r\n    description: 'Feel physical tension melt away as guided vibrations help your nervous system shift from fight-or-flight to rest-and-digest mode.'\r\n  },\r\n  'enhance-sleep': {\r\n    title: 'Prepare your mind for restorative sleep',\r\n    features: [\r\n      'Create calming bedtime rituals',\r\n      'Quiet racing thoughts before bed'\r\n    ],\r\n    description: 'Gentle pulses and soothing sounds guide your mind into a peaceful state, making it easier to fall asleep and stay asleep.'\r\n  },\r\n  'sync-mind-body': {\r\n    title: 'Harmonize mental and physical states',\r\n    features: [\r\n      'Align breath with heart rate variability',\r\n      'Create coherence between mind and body'\r\n    ],\r\n    description: 'Experience the profound connection between mental clarity and physical wellness through synchronized breathing and biometric feedback.'\r\n  },\r\n  'practice-stillness': {\r\n    title: 'Cultivate deep mindfulness practice',\r\n    features: [\r\n      'Develop sustained attention and awareness',\r\n      'Build resilience through consistent practice'\r\n    ],\r\n    description: 'Progress from scattered attention to focused presence, creating a foundation for lasting peace and emotional stability.'\r\n  }\r\n}\r\n","// src/App.tsx\r\nimport { Suspense, useEffect } from 'react'\r\nimport { Navigation } from './components/layout/Navigation'\r\nimport { Footer } from './components/layout/Footer'\r\nimport { HeroSection } from './components/sections/HeroSection'\r\nimport { TabSection, HoldMeditateSection, ComponentLoadingFallback } from './components/LazyComponents'\r\nimport { ParticleBackground } from './components/ui/ParticleBackground'\r\nimport { useScreenSize } from './hooks/useScreenSize'\r\nimport { \r\n  useAccessibilityMonitor, \r\n  useKeyboardNavigationTracker, \r\n  useScreenReaderSimulator \r\n} from './hooks/useAccessibilityAudit'\r\nimport { tabContent } from './data/tabContent'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const { isMobile } = useScreenSize()\r\n  \r\n  // Accessibility testing hooks (development only)\r\n  useAccessibilityMonitor(import.meta.env.DEV)\r\n  useKeyboardNavigationTracker(import.meta.env.DEV)\r\n  useScreenReaderSimulator(import.meta.env.DEV)  // Initialize comprehensive testing suite in development\r\n  useEffect(() => {\r\n    if (import.meta.env.DEV) {\r\n      console.log('🧪 Wellness App Testing Suite initialized')\r\n      console.log('Use window.runTests() to manually run the full test suite')\r\n        // Initialize testing suite globally for manual testing\r\n      import('./utils/TestSuite').then(({ testSuite }) => {\r\n        (window as any).runTests = () => testSuite.runFullSuite()\r\n      })\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      {/* Ambient particle background */}\r\n      <ParticleBackground particleCount={30} />\r\n      \r\n      {/* Skip link for keyboard navigation */}\r\n      <a \r\n        href=\"#main-content\" \r\n        className=\"skip-link\"\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-40px',\r\n          left: '6px',\r\n          background: 'var(--colors-primary-800)',\r\n          color: 'white',\r\n          padding: '8px',\r\n          textDecoration: 'none',\r\n          borderRadius: '0 0 4px 4px',\r\n          zIndex: 1000,\r\n          transition: 'top 0.2s ease'\r\n        }}\r\n        onFocus={(e) => e.currentTarget.style.top = '0'}\r\n        onBlur={(e) => e.currentTarget.style.top = '-40px'}\r\n      >\r\n        Skip to main content\r\n      </a>\r\n      \r\n      <Navigation />      <main id=\"main-content\" role=\"main\" tabIndex={-1}>\r\n        <section id=\"home\" aria-label=\"Home\">\r\n          <HeroSection isMobile={isMobile} />\r\n        </section>\r\n        \r\n        {/* Lazy load non-critical sections */}\r\n        <section id=\"about\" aria-label=\"About - Meditation techniques\">\r\n          <Suspense fallback={<ComponentLoadingFallback />}>\r\n            <TabSection isMobile={isMobile} tabContent={tabContent} />\r\n          </Suspense>\r\n        </section>\r\n          <section id=\"how-it-works\" aria-label=\"How it works - Hold and meditate practice\">\r\n          <Suspense fallback={<ComponentLoadingFallback />}>\r\n            <HoldMeditateSection isMobile={isMobile} />\r\n          </Suspense>\r\n        </section>\r\n      </main>\r\n      \r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\n\r\n// Service Worker Registration for Performance Optimization\r\nasync function registerServiceWorker() {\r\n  if ('serviceWorker' in navigator && import.meta.env.PROD) {\r\n    try {\r\n      const registration = await navigator.serviceWorker.register('/sw.js', {\r\n        scope: '/'\r\n      })\r\n      \r\n      console.log('[SW] Service Worker registered successfully:', registration.scope)\r\n      \r\n      // Handle updates\r\n      registration.addEventListener('updatefound', () => {\r\n        const newWorker = registration.installing\r\n        if (newWorker) {\r\n          newWorker.addEventListener('statechange', () => {\r\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\r\n              // New service worker available, prompt user to refresh\r\n              console.log('[SW] New service worker available - consider refreshing')\r\n            }\r\n          })\r\n        }\r\n      })\r\n      \r\n      // Pre-cache critical 3D assets after app loads\r\n      if (registration.active) {\r\n        setTimeout(() => {\r\n          registration.active?.postMessage({\r\n            type: 'CACHE_ASSETS',            payload: {\r\n              assets: [\r\n                '/src/components/three-d/ProceduralPebble.tsx',\r\n                '/src/components/three-d/SceneManager.tsx',\r\n                '/src/utils/AnimationScheduler.ts',\r\n                '/src/utils/LRUCache.ts'\r\n              ]\r\n            }\r\n          })\r\n        }, 2000) // Cache after initial load\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.warn('[SW] Service Worker registration failed:', error)\r\n    }\r\n  } else if (!import.meta.env.PROD) {\r\n    console.log('[SW] Service Worker skipped in development mode')\r\n  }\r\n}\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)\r\n\r\n// Register service worker after React app mounts\r\nregisterServiceWorker()\r\n"],"file":"assets/index-DIwDuakV.js"}